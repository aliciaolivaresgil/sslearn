window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"sslearn": {"fullname": "sslearn", "modulename": "sslearn", "kind": "module", "doc": "<h1 id=\"semi-supervised-learning-library-sslearn\">Semi-Supervised Learning Library (sslearn)</h1>\n\n<p><!-- Insert logo in the middle -->\n<img width=\"100%\" src=\"https://raw.githubusercontent.com/jlgarridol/sslearn/main/docs/sslearn.webp\"/></p>\n\n<p><img src=\"https://img.shields.io/codeclimate/maintainability-percentage/jlgarridol/sslearn\" alt=\"Code Climate maintainability\" /> <img src=\"https://img.shields.io/codeclimate/coverage/jlgarridol/sslearn\" alt=\"Code Climate coverage\" /> <img src=\"https://img.shields.io/github/actions/workflow/status/jlgarridol/sslearn/python-package.yml\" alt=\"GitHub Workflow Status\" /> <img src=\"https://img.shields.io/pypi/v/sslearn\" alt=\"PyPI - Version\" /></p>\n\n<p>The <code>sslearn</code> library is a Python package for machine learning over Semi-supervised datasets. It is an extension of <a href=\"https://github.com/scikit-learn/scikit-learn\">scikit-learn</a>.</p>\n\n<h6 id=\"installation\">Installation</h6>\n\n<h3 id=\"dependencies\">Dependencies</h3>\n\n<ul>\n<li>joblib &gt;= 1.2.0</li>\n<li>numpy &gt;= 1.23.3</li>\n<li>pandas &gt;= 1.4.3</li>\n<li>scikit_learn &gt;= 1.2.0</li>\n<li>scipy &gt;= 1.10.1</li>\n<li>statsmodels &gt;= 0.13.2</li>\n<li>pytest = 7.2.0 (only for testing)</li>\n</ul>\n\n<h3 id=\"pip-installation\"><code>pip</code> installation</h3>\n\n<p>It can be installed using <em>Pypi</em>:</p>\n\n<pre><code>pip install sslearn\n</code></pre>\n\n<h6 id=\"code-example\">Code example</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">sslearn.wrapper</span> <span class=\"kn\">import</span> <span class=\"n\">TriTraining</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sslearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">artificial_ssl_dataset</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">load_iris</span>\n\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">load_iris</span><span class=\"p\">(</span><span class=\"n\">return_X_y</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">X_unlabel</span><span class=\"p\">,</span> <span class=\"n\">true_label</span> <span class=\"o\">=</span> <span class=\"n\">artificial_ssl_dataset</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">label_rate</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">TriTraining</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">X_unlabel</span><span class=\"p\">,</span> <span class=\"n\">true_label</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h6 id=\"citing\">Citing</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"nc\">@software</span><span class=\"p\">{</span><span class=\"nl\">jose_luis_garrido_labrador_2024_10623889</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"na\">author</span><span class=\"w\">       </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"s\">{Jos\u00e9 Luis Garrido-Labrador}</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"na\">title</span><span class=\"w\">        </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"s\">{jlgarridol/sslearn: v1.0.4}</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"na\">month</span><span class=\"w\">        </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"nv\">feb</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"na\">year</span><span class=\"w\">         </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"m\">2024</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"na\">publisher</span><span class=\"w\">    </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"s\">{Zenodo}</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"na\">version</span><span class=\"w\">      </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"s\">{1.0.4}</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"na\">doi</span><span class=\"w\">          </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"s\">{10.5281/zenodo.10623889}</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"na\">url</span><span class=\"w\">          </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"s\">{https://doi.org/10.5281/zenodo.10623889}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre>\n</div>\n"}, "sslearn.base": {"fullname": "sslearn.base", "modulename": "sslearn.base", "kind": "module", "doc": "<p>Summary of module <code>sslearn.base</code>:</p>\n\n<h6 id=\"functions\">Functions</h6>\n\n<p>get_dataset(X, y):\n    Check and divide dataset between labeled and unlabeled data.</p>\n\n<h6 id=\"classes\">Classes</h6>\n\n<p>FakedProbaClassifier(MetaEstimatorMixin, ClassifierMixin, BaseEstimator):\n    Create a classifier that fakes predict_proba method if it does not exist.</p>\n\n<p>OneVsRestSSLClassifier(OneVsRestClassifier):\n    Adapted OneVsRestClassifier for SSL datasets</p>\n\n<h2 id=\"all-doc\">All doc</h2>\n"}, "sslearn.base.FakedProbaClassifier": {"fullname": "sslearn.base.FakedProbaClassifier", "modulename": "sslearn.base", "qualname": "FakedProbaClassifier", "kind": "class", "doc": "<p>Mixin class for all classifiers in scikit-learn.</p>\n", "bases": "sklearn.base.MetaEstimatorMixin, sklearn.base.ClassifierMixin, sklearn.base.BaseEstimator"}, "sslearn.base.FakedProbaClassifier.__init__": {"fullname": "sslearn.base.FakedProbaClassifier.__init__", "modulename": "sslearn.base", "qualname": "FakedProbaClassifier.__init__", "kind": "function", "doc": "<p>Create a classifier that fakes predict_proba method if it does not exist.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_estimator</strong> (ClassifierMixin):\nA classifier that implements fit and predict methods.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">base_estimator</span></span>)</span>"}, "sslearn.base.FakedProbaClassifier.fit": {"fullname": "sslearn.base.FakedProbaClassifier.fit", "modulename": "sslearn.base", "qualname": "FakedProbaClassifier.fit", "kind": "function", "doc": "<p>Fit a FakedProbaClassifier.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe input samples.</li>\n<li><strong>y</strong> ({array-like, sparse matrix} of shape (n_samples,)):\nThe target values.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (FakedProbaClassifier):\nReturns self.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.base.FakedProbaClassifier.predict": {"fullname": "sslearn.base.FakedProbaClassifier.predict", "modulename": "sslearn.base", "qualname": "FakedProbaClassifier.predict", "kind": "function", "doc": "<p>Predict the classes of X.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nArray representing the data.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>y</strong> (ndarray of shape (n_samples,)):\nArray with predicted labels.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.base.FakedProbaClassifier.predict_proba": {"fullname": "sslearn.base.FakedProbaClassifier.predict_proba", "modulename": "sslearn.base", "qualname": "FakedProbaClassifier.predict_proba", "kind": "function", "doc": "<p>Predict the probabilities of each class for X. \nIf the base estimator does not have a predict_proba method, it will be faked using one hot encoding.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>y</strong> (ndarray of shape (n_samples, n_classes)):\nArray with predicted probabilities.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.base.FakedProbaClassifier.set_score_request": {"fullname": "sslearn.base.FakedProbaClassifier.set_score_request", "modulename": "sslearn.base", "qualname": "FakedProbaClassifier.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.base.get_dataset": {"fullname": "sslearn.base.get_dataset", "modulename": "sslearn.base", "qualname": "get_dataset", "kind": "function", "doc": "<p>Check and divide dataset between labeled and unlabeled data.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (ndarray or DataFrame of shape (n_samples, n_features)):\nFeatures matrix.</li>\n<li><strong>y</strong> (ndarray of shape (n_samples,)):\nTarget vector.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>X_label</strong> (ndarray or DataFrame of shape (n_label, n_features)):\nLabeled features matrix.</li>\n<li><strong>y_label</strong> (ndarray or Serie of shape (n_label,)):\nLabeled target vector.</li>\n<li><strong>X_unlabel</strong> (ndarray or Serie DataFrame of shape (n_unlabel, n_features)):\nUnlabeled features matrix.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.base.OneVsRestSSLClassifier": {"fullname": "sslearn.base.OneVsRestSSLClassifier", "modulename": "sslearn.base", "qualname": "OneVsRestSSLClassifier", "kind": "class", "doc": "<p>One-vs-the-rest (OvR) multiclass strategy.</p>\n\n<p>Also known as one-vs-all, this strategy consists in fitting one classifier\nper class. For each classifier, the class is fitted against all the other\nclasses. In addition to its computational efficiency (only <code>n_classes</code>\nclassifiers are needed), one advantage of this approach is its\ninterpretability. Since each class is represented by one and one classifier\nonly, it is possible to gain knowledge about the class by inspecting its\ncorresponding classifier. This is the most commonly used strategy for\nmulticlass classification and is a fair default choice.</p>\n\n<p>OneVsRestClassifier can also be used for multilabel classification. To use\nthis feature, provide an indicator matrix for the target <code>y</code> when calling\n<code>.fit</code>. In other words, the target labels should be formatted as a 2D\nbinary (0/1) matrix, where [i, j] == 1 indicates the presence of label j\nin sample i. This estimator uses the binary relevance method to perform\nmultilabel classification, which involves training one binary classifier\nindependently for each label.</p>\n\n<p>Read more in the :ref:<code>User Guide &lt;ovr_classification&gt;</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>estimator</strong> (estimator object):\nA regressor or a classifier that implements :term:<code>fit</code>.\nWhen a classifier is passed, :term:<code>decision_function</code> will be used\nin priority and it will fallback to :term:<code>predict_proba</code> if it is not\navailable.\nWhen a regressor is passed, :term:<code>predict</code> is used.</li>\n<li><p><strong>n_jobs</strong> (int, default=None):\nThe number of jobs to use for the computation: the <code>n_classes</code>\none-vs-rest problems are computed in parallel.</p>\n\n<p><code>None</code> means 1 unless in a <code>joblib.parallel_backend</code> context.\n<code>-1</code> means using all processors. See :term:<code>Glossary &lt;n_jobs&gt;</code>\nfor more details.</p>\n\n<p><em>Changed in version 0.20:</em>\n<code>n_jobs</code> default changed from 1 to None</p></li>\n<li><p><strong>verbose</strong> (int, default=0):\nThe verbosity level, if non zero, progress messages are printed.\nBelow 50, the output is sent to stderr. Otherwise, the output is sent\nto stdout. The frequency of the messages increases with the verbosity\nlevel, reporting all iterations at 10. See <code>joblib.Parallel</code> for\nmore details.</p>\n\n<p><em>New in version 1.1.</em></p></li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>estimators_</strong> (list of <code>n_classes</code> estimators):\nEstimators used for predictions.</li>\n<li><strong>classes_</strong> (array, shape = [<code>n_classes</code>]):\nClass labels.</li>\n<li><strong>n_classes_</strong> (int):\nNumber of classes.</li>\n<li><strong>label_binarizer_</strong> (LabelBinarizer object):\nObject used to transform multiclass labels to binary labels and\nvice-versa.</li>\n<li><strong>multilabel_</strong> (boolean):\nWhether a OneVsRestClassifier is a multilabel classifier.</li>\n<li><p><strong>n_features_in_</strong> (int):\nNumber of features seen during :term:<code>fit</code>. Only defined if the\nunderlying estimator exposes such an attribute when fit.</p>\n\n<p><em>New in version 0.24.</em></p></li>\n<li><p><strong>feature_names_in_</strong> (ndarray of shape (<code>n_features_in_</code>,)):\nNames of features seen during :term:<code>fit</code>. Only defined if the\nunderlying estimator exposes such an attribute when fit.</p>\n\n<p><em>New in version 1.0.</em></p></li>\n</ul>\n\n<h6 id=\"see-also\">See Also</h6>\n\n<p><code>OneVsOneClassifier</code>:  One-vs-one multiclass strategy. <br />\n<code>OutputCodeClassifier</code>:  (Error-Correcting) Output-Code multiclass strategy. <br />\n<code>sklearn.multioutput.MultiOutputClassifier</code>:  Alternate way of extending an\nestimator for multilabel classification. <br />\n<code>sklearn.preprocessing.MultiLabelBinarizer</code>:  Transform iterable of iterables\nto binary indicator matrix.  </p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">sklearn.multiclass</span> <span class=\"kn\">import</span> <span class=\"n\">OneVsRestClassifier</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">sklearn.svm</span> <span class=\"kn\">import</span> <span class=\"n\">SVC</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span>\n<span class=\"gp\">... </span>    <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>    <span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>    <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mf\">5.5</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>    <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">5.4</span><span class=\"p\">,</span> <span class=\"mf\">5.5</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>    <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">20</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>    <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">20</span><span class=\"p\">]</span>\n<span class=\"gp\">... </span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">clf</span> <span class=\"o\">=</span> <span class=\"n\">OneVsRestClassifier</span><span class=\"p\">(</span><span class=\"n\">SVC</span><span class=\"p\">())</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">([[</span><span class=\"o\">-</span><span class=\"mi\">19</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">20</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]])</span>\n<span class=\"go\">array([2, 0, 1])</span>\n</code></pre>\n</div>\n", "bases": "sklearn.multiclass.OneVsRestClassifier"}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"fullname": "sslearn.base.OneVsRestSSLClassifier.__init__", "modulename": "sslearn.base", "qualname": "OneVsRestSSLClassifier.__init__", "kind": "function", "doc": "<p>Adapted OneVsRestClassifier for SSL datasets</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>estimator</strong> ({ClassifierMixin, list},):\nAn estimator object implementing fit and predict_proba or a list of ClassifierMixin</li>\n<li><strong>n_jobs : n_jobs</strong> (int, optional):\nThe number of jobs to run in parallel. -1 means using all processors., by default None</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">estimator</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">n_jobs</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "sslearn.base.OneVsRestSSLClassifier.fit": {"fullname": "sslearn.base.OneVsRestSSLClassifier.fit", "modulename": "sslearn.base", "qualname": "OneVsRestSSLClassifier.fit", "kind": "function", "doc": "<p>Fit underlying estimators.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nData.</li>\n<li><strong>y</strong> ({array-like, sparse matrix} of shape (n_samples,) or (n_samples, n_classes)):\nMulti-class targets. An indicator matrix turns on multilabel\nclassification.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (object):\nInstance of fitted estimator.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">fit_params</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.base.OneVsRestSSLClassifier.predict": {"fullname": "sslearn.base.OneVsRestSSLClassifier.predict", "modulename": "sslearn.base", "qualname": "OneVsRestSSLClassifier.predict", "kind": "function", "doc": "<p>Predict multi-class targets using underlying estimators.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nData.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>y</strong> ({array-like, sparse matrix} of shape (n_samples,) or (n_samples, n_classes)):\nPredicted multi-class targets.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"fullname": "sslearn.base.OneVsRestSSLClassifier.predict_proba", "modulename": "sslearn.base", "qualname": "OneVsRestSSLClassifier.predict_proba", "kind": "function", "doc": "<p>Probability estimates.</p>\n\n<p>The returned estimates for all classes are ordered by label of classes.</p>\n\n<p>Note that in the multilabel case, each sample can have any number of\nlabels. This returns the marginal probability that the given sample has\nthe label in question. For example, it is entirely consistent that two\nlabels both have a 90% probability of applying to a given sample.</p>\n\n<p>In the single label multiclass case, the rows of the returned matrix\nsum to 1.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nInput data.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>T</strong> (array-like of shape (n_samples, n_classes)):\nReturns the probability of the sample for each class in the model,\nwhere classes are ordered as they are in <code>self.classes_</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"fullname": "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request", "modulename": "sslearn.base", "qualname": "OneVsRestSSLClassifier.set_partial_fit_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"fullname": "sslearn.base.OneVsRestSSLClassifier.set_score_request", "modulename": "sslearn.base", "qualname": "OneVsRestSSLClassifier.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.datasets": {"fullname": "sslearn.datasets", "modulename": "sslearn.datasets", "kind": "module", "doc": "<p>Summary of module <code>sslearn.datasets</code>:</p>\n\n<p>This module contains functions to load and save datasets in different formats.</p>\n\n<h6 id=\"functions\">Functions</h6>\n\n<ol>\n<li>read_csv : Load a dataset from a CSV file.</li>\n<li>read_keel : Load a dataset from a KEEL file.</li>\n<li>secure_dataset : Secure the dataset by converting it into a secure format.</li>\n<li>save_keel : Save a dataset in KEEL format.</li>\n</ol>\n\n<h2 id=\"all-doc\">All doc</h2>\n"}, "sslearn.datasets.read_csv": {"fullname": "sslearn.datasets.read_csv", "modulename": "sslearn.datasets", "qualname": "read_csv", "kind": "function", "doc": "<p>Read a .csv file</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong> (str):\nFile path</li>\n<li><strong>format</strong> (str, optional):\nObject that will contain the data, it can be <code>numpy</code> or <code>pandas</code>, by default \"pandas\"</li>\n<li><strong>secure</strong> (bool, optional):\nIt guarantees that the dataset has not  <code>-1</code> as valid class, in order to make it semi-supervised after, by default False</li>\n<li><strong>target_col</strong> ({str, int, None}, optional):\nColumn name or index to select class column, if None use the default value stored in the file, by default None</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>X, y</strong> (array_like):\nDataset loaded.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span>, </span><span class=\"param\"><span class=\"nb\">format</span><span class=\"o\">=</span><span class=\"s1\">&#39;pandas&#39;</span>, </span><span class=\"param\"><span class=\"n\">secure</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">target_col</span><span class=\"o\">=-</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.datasets.read_keel": {"fullname": "sslearn.datasets.read_keel", "modulename": "sslearn.datasets", "qualname": "read_keel", "kind": "function", "doc": "<p>Read a .dat file from KEEL (<a href=\"http://www.keel.es/\">http://www.keel.es/</a>)</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong> (str):\nFile path</li>\n<li><strong>format</strong> (str, optional):\nObject that will contain the data, it can be <code>numpy</code> or <code>pandas</code>, by default \"pandas\"</li>\n<li><strong>secure</strong> (bool, optional):\nIt guarantees that the dataset has not  <code>-1</code> as valid class, in order to make it semi-supervised after, by default False</li>\n<li><strong>target_col</strong> ({str, int, None}, optional):\nColumn name or index to select class column, if None use the default value stored in the file, by default None</li>\n<li><strong>encoding</strong> (str, optional):\nEncoding of file, by default \"utf-8\"</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>X, y</strong> (array_like):\nDataset loaded.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">path</span>,</span><span class=\"param\">\t<span class=\"nb\">format</span><span class=\"o\">=</span><span class=\"s1\">&#39;pandas&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">secure</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">target_col</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">&#39;utf-8&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.datasets.secure_dataset": {"fullname": "sslearn.datasets.secure_dataset", "modulename": "sslearn.datasets", "qualname": "secure_dataset", "kind": "function", "doc": "<p>It guarantees that the dataset has not  <code>-1</code> as valid class, in order to make it semi-supervised after</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (Array-like):\nIgnored</li>\n<li><strong>y</strong> (Array-like):\nTarget array.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>X, y</strong> (array_like):\nDataset securized.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.datasets.save_keel": {"fullname": "sslearn.datasets.save_keel", "modulename": "sslearn.datasets", "qualname": "save_keel", "kind": "function", "doc": "<p>Save a dataset in the KEEL format</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (array-like):\nDataset features</li>\n<li><strong>y</strong> (array-like):\nDataset targets</li>\n<li><strong>route</strong> (str):\nPath to save the dataset</li>\n<li><strong>name</strong> (str, optional):\nDataset name, if None the route basename will be selected, by default None</li>\n<li><strong>attribute_name</strong> (list, optional):\nList of attribute names, if None the default names will be used, by default None</li>\n<li><strong>target_name</strong> (str, optional):\nTarget name, by default \"Class\"</li>\n<li><strong>classification</strong> (bool, optional):\nIf the dataset is classification or regression, by default True</li>\n<li><strong>unlabeled</strong> (bool, optional):\nIf the dataset has unlabeled instances, by default True</li>\n<li><strong>force_targets</strong> (collection, optional):\nForce the targets to be a specific value, by default None</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span>,</span><span class=\"param\">\t<span class=\"n\">y</span>,</span><span class=\"param\">\t<span class=\"n\">route</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">attribute_name</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">target_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;Class&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">classification</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">unlabeled</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">force_targets</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.model_selection": {"fullname": "sslearn.model_selection", "modulename": "sslearn.model_selection", "kind": "module", "doc": "<p>Summary of module <code>sslearn.model_selection</code>:</p>\n\n<p>This module contains functions to split datasets into training and testing sets.</p>\n\n<h6 id=\"functions\">Functions</h6>\n\n<p>artificial_ssl_dataset : Generate an artificial semi-supervised learning dataset.</p>\n\n<h6 id=\"classes\">Classes</h6>\n\n<p>StratifiedKFoldSS : Stratified K-Folds cross-validator for semi-supervised learning.</p>\n\n<h2 id=\"all-doc\">All doc</h2>\n"}, "sslearn.model_selection.artificial_ssl_dataset": {"fullname": "sslearn.model_selection.artificial_ssl_dataset", "modulename": "sslearn.model_selection", "qualname": "artificial_ssl_dataset", "kind": "function", "doc": "<p>Create an artificial Semi-supervised dataset from a supervised dataset.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (array-like of shape (n_samples, n_features)):\nTraining data, where n_samples is the number of samples\nand n_features is the number of features.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe target variable for supervised learning problems.</li>\n<li><strong>label_rate</strong> (float, optional):\nProportion between labeled instances and unlabel instances, by default 0.1</li>\n<li><strong>random_state</strong> (int or RandomState, optional):\nControls the shuffling applied to the data before applying the split. Pass an int for reproducible output across multiple function calls, by default None</li>\n<li><strong>force_minimum</strong> (int, optional):\nForce a minimum of instances of each class, by default None</li>\n<li><strong>indexes</strong> (bool, optional):\nIf True, return the indexes of the labeled and unlabeled instances, by default False</li>\n<li><strong>shuffle</strong> (bool, default=True):\nWhether or not to shuffle the data before splitting. If shuffle=False then stratify must be None.</li>\n<li><strong>stratify</strong> (array-like, default=None):\nIf not None, data is split in a stratified fashion, using this as the class labels.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>X</strong> (ndarray):\nThe feature set.</li>\n<li><strong>y</strong> (ndarray):\nThe label set, -1 for unlabel instance.</li>\n<li><strong>X_unlabel</strong> (ndarray):\nThe feature set for each y mark as unlabel</li>\n<li><strong>y_unlabel</strong> (ndarray):\nThe true label for each y in the same order.</li>\n<li><strong>label</strong> (ndarray (optional)):\nThe training set indexes for split mark as labeled.</li>\n<li><strong>unlabel</strong> (ndarray (optional)):\nThe training set indexes for split mark as unlabeled.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span>,</span><span class=\"param\">\t<span class=\"n\">y</span>,</span><span class=\"param\">\t<span class=\"n\">label_rate</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">force_minimum</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">indexes</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.restricted": {"fullname": "sslearn.restricted", "modulename": "sslearn.restricted", "kind": "module", "doc": "<p>Summary of module <code>sslearn.restricted</code>:</p>\n\n<p>This module contains classes to train a classifier using the restricted set classification approach.</p>\n\n<h6 id=\"classes\">Classes</h6>\n\n<p>WhoIsWhoClassifier : Who is Who Classifier</p>\n\n<h6 id=\"functions\">Functions</h6>\n\n<p>conflict_rate : Compute the conflict rate of a prediction, given a set of restrictions.\ncombine_predictions : Combine the predictions of a group of instances to keep the restrictions.</p>\n\n<h2 id=\"all-doc\">All doc</h2>\n"}, "sslearn.restricted.WhoIsWhoClassifier": {"fullname": "sslearn.restricted.WhoIsWhoClassifier", "modulename": "sslearn.restricted", "qualname": "WhoIsWhoClassifier", "kind": "class", "doc": "<p>Base class for all estimators in scikit-learn.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>All estimators should specify all the parameters that can be set\nat the class level in their <code>__init__</code> as explicit keyword\narguments (no <code>*args</code> or <code>**kwargs</code>).</p>\n", "bases": "sklearn.base.BaseEstimator, sklearn.base.ClassifierMixin, sklearn.base.MetaEstimatorMixin"}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"fullname": "sslearn.restricted.WhoIsWhoClassifier.__init__", "modulename": "sslearn.restricted", "qualname": "WhoIsWhoClassifier.__init__", "kind": "function", "doc": "<p>Who is Who Classifier\nKuncheva, L. I., Rodriguez, J. J., &amp; Jackson, A. S. (2017).\nRestricted set classification: Who is there?. <i>Pattern Recognition</i>, 63, 158-170.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_estimator</strong> (ClassifierMixin):\nThe base estimator to be used for training.</li>\n<li><strong>method</strong> (str, optional):\nThe method to use to assing class, it can be <code>greedy</code> to first-look or <code>hungarian</code> to use the Hungarian algorithm, by default \"hungarian\"</li>\n<li><strong>conflict_weighted</strong> (bool, default=True):\nWhether to weighted the confusion rate by the number of instances with the same group.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">base_estimator</span>, </span><span class=\"param\"><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;hungarian&#39;</span>, </span><span class=\"param\"><span class=\"n\">conflict_weighted</span><span class=\"o\">=</span><span class=\"kc\">True</span></span>)</span>"}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"fullname": "sslearn.restricted.WhoIsWhoClassifier.fit", "modulename": "sslearn.restricted", "qualname": "WhoIsWhoClassifier.fit", "kind": "function", "doc": "<p>Fit the model according to the given training data.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe input samples.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe target values.</li>\n<li><strong>instance_group</strong> (array-like of shape (n_samples)):\nThe group. Two instances with the same label are not allowed to be in the same group. If None, group restriction will not be used in training.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (object):\nReturns self.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">instance_group</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"fullname": "sslearn.restricted.WhoIsWhoClassifier.conflict_rate", "modulename": "sslearn.restricted", "qualname": "WhoIsWhoClassifier.conflict_rate", "kind": "function", "doc": "<p>Calculate the conflict rate of the model.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe input samples.</li>\n<li><strong>instance_group</strong> (array-like of shape (n_samples)):\nThe group. Two instances with the same label are not allowed to be in the same group.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: The conflict rate.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">instance_group</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"fullname": "sslearn.restricted.WhoIsWhoClassifier.predict", "modulename": "sslearn.restricted", "qualname": "WhoIsWhoClassifier.predict", "kind": "function", "doc": "<p>Predict class for X.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe input samples.</li>\n<li><strong>**kwards</strong> (array-like of shape (n_samples)):\nThe group. Two instances with the same label are not allowed to be in the same group.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>array-like of shape (n_samples, n_classes)</strong>: The class probabilities of the input samples.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">instance_group</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"fullname": "sslearn.restricted.WhoIsWhoClassifier.predict_proba", "modulename": "sslearn.restricted", "qualname": "WhoIsWhoClassifier.predict_proba", "kind": "function", "doc": "<p>Predict class probabilities for X.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe input samples.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>array-like of shape (n_samples, n_classes)</strong>: The class probabilities of the input samples.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"fullname": "sslearn.restricted.WhoIsWhoClassifier.set_fit_request", "modulename": "sslearn.restricted", "qualname": "WhoIsWhoClassifier.set_fit_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"fullname": "sslearn.restricted.WhoIsWhoClassifier.set_predict_request", "modulename": "sslearn.restricted", "qualname": "WhoIsWhoClassifier.set_predict_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"fullname": "sslearn.restricted.WhoIsWhoClassifier.set_score_request", "modulename": "sslearn.restricted", "qualname": "WhoIsWhoClassifier.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.restricted.conflict_rate": {"fullname": "sslearn.restricted.conflict_rate", "modulename": "sslearn.restricted", "qualname": "conflict_rate", "kind": "function", "doc": "<p>Computes the conflict rate of a prediction, given a set of restrictions.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>y_pred</strong> (array-like of shape (n_samples,)):\nPredicted target values.</li>\n<li><strong>restrictions</strong> (array-like of shape (n_samples,)):\nRestrictions for each sample. If two samples have the same restriction, they cannot have the same y.</li>\n<li><strong>weighted</strong> (bool, default=True):\nWhether to weighted the confusion rate by the number of instances with the same group.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>conflict rate</strong> (float):\nThe conflict rate.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">y_pred</span>, </span><span class=\"param\"><span class=\"n\">restrictions</span>, </span><span class=\"param\"><span class=\"n\">weighted</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.subview": {"fullname": "sslearn.subview", "modulename": "sslearn.subview", "kind": "module", "doc": "<p>Summary of module <code>sslearn.subview</code>:</p>\n\n<p>This module contains classes to train a classifier or a regressor selecting a sub-view of the data.</p>\n\n<h6 id=\"classes\">Classes</h6>\n\n<p>SubViewClassifier : Train a sub-view classifier.\nSubViewRegressor : Train a sub-view regressor.</p>\n\n<h2 id=\"all-doc\">All doc</h2>\n"}, "sslearn.subview.SubViewClassifier": {"fullname": "sslearn.subview.SubViewClassifier", "modulename": "sslearn.subview", "qualname": "SubViewClassifier", "kind": "class", "doc": "<p>Base class for all estimators in scikit-learn.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>All estimators should specify all the parameters that can be set\nat the class level in their <code>__init__</code> as explicit keyword\narguments (no <code>*args</code> or <code>**kwargs</code>).</p>\n", "bases": "sslearn.subview._subview.SubView, sklearn.base.ClassifierMixin"}, "sslearn.subview.SubViewClassifier.predict_proba": {"fullname": "sslearn.subview.SubViewClassifier.predict_proba", "modulename": "sslearn.subview", "qualname": "SubViewClassifier.predict_proba", "kind": "function", "doc": "<p>Predict class probabilities using the base estimator.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (array-like of shape (n_samples, n_features)):\nThe input samples.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>p</strong> (array-like of shape (n_samples, n_classes)):\nThe class probabilities of the input samples.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.subview.SubViewClassifier.set_score_request": {"fullname": "sslearn.subview.SubViewClassifier.set_score_request", "modulename": "sslearn.subview", "qualname": "SubViewClassifier.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.subview.SubViewRegressor": {"fullname": "sslearn.subview.SubViewRegressor", "modulename": "sslearn.subview", "qualname": "SubViewRegressor", "kind": "class", "doc": "<p>Base class for all estimators in scikit-learn.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>All estimators should specify all the parameters that can be set\nat the class level in their <code>__init__</code> as explicit keyword\narguments (no <code>*args</code> or <code>**kwargs</code>).</p>\n", "bases": "sslearn.subview._subview.SubView, sklearn.base.RegressorMixin"}, "sslearn.subview.SubViewRegressor.predict": {"fullname": "sslearn.subview.SubViewRegressor.predict", "modulename": "sslearn.subview", "qualname": "SubViewRegressor.predict", "kind": "function", "doc": "<p>Predict using the base estimator.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (array-like of shape (n_samples, n_features)):\nThe input samples.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe predicted values.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.subview.SubViewRegressor.set_score_request": {"fullname": "sslearn.subview.SubViewRegressor.set_score_request", "modulename": "sslearn.subview", "qualname": "SubViewRegressor.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.utils": {"fullname": "sslearn.utils", "modulename": "sslearn.utils", "kind": "module", "doc": "<p>Some utility functions</p>\n\n<p>This module contains utility functions that are used in different parts of the library.</p>\n\n<h6 id=\"functions\">Functions</h6>\n\n<p>safe_division : Safely divide two numbers preventing division by zero.\nconfidence_interval : Calculate the confidence interval of the predictions.\nchoice_with_proportion : Choice the best predictions according to the proportion of each class.\ncalculate_prior_probability : Calculate the priori probability of each label.\ncheck_n_jobs : Check <code>n_jobs</code> parameter according to the scikit-learn convention.</p>\n\n<h2 id=\"all-doc\">All doc</h2>\n"}, "sslearn.utils.safe_division": {"fullname": "sslearn.utils.safe_division", "modulename": "sslearn.utils", "qualname": "safe_division", "kind": "function", "doc": "<p>Safely divide two numbers preventing division by zero</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dividend</strong> (numeric):\nDividend value</li>\n<li><strong>divisor</strong> (numeric):\nDivisor value</li>\n<li><strong>epsilon</strong> (numeric):\nClose to zero value to be used in case of division by zero</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>result</strong> (numeric):\nResult of the division</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dividend</span>, </span><span class=\"param\"><span class=\"n\">divisor</span>, </span><span class=\"param\"><span class=\"n\">epsilon</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.utils.confidence_interval": {"fullname": "sslearn.utils.confidence_interval", "modulename": "sslearn.utils", "qualname": "confidence_interval", "kind": "function", "doc": "<p>Calculate the confidence interval of the predictions</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe input samples.</li>\n<li><strong>hyp</strong> (classifier):\nThe classifier to be used for prediction</li>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe target values</li>\n<li><strong>alpha</strong> (float, optional):\nconfidence (1 - significance), by default .95</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>li, hi</strong> (float):\nlower and upper bound of the confidence interval</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">hyp</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.95</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.utils.choice_with_proportion": {"fullname": "sslearn.utils.choice_with_proportion", "modulename": "sslearn.utils", "qualname": "choice_with_proportion", "kind": "function", "doc": "<p>Choice the best predictions according to the proportion of each class.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>predictions</strong> (array-like of shape (n_samples,)):\narray of predictions</li>\n<li><strong>class_predicted</strong> (array-like of shape (n_samples,)):\narray of predicted classes</li>\n<li><strong>proportion</strong> (dict):\ndictionary with the proportion of each class</li>\n<li><strong>extra</strong> (int, optional):\nnumber of extra instances to be added, by default 0</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>indices</strong> (array-like of shape (n_samples,)):\narray of indices of the best predictions</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">predictions</span>, </span><span class=\"param\"><span class=\"n\">class_predicted</span>, </span><span class=\"param\"><span class=\"n\">proportion</span>, </span><span class=\"param\"><span class=\"n\">extra</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.utils.calculate_prior_probability": {"fullname": "sslearn.utils.calculate_prior_probability", "modulename": "sslearn.utils", "qualname": "calculate_prior_probability", "kind": "function", "doc": "<p>Calculate the priori probability of each label</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\narray of labels</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>class_probability</strong> (dict):\ndictionary with priori probability (value) of each label (key)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.utils.check_n_jobs": {"fullname": "sslearn.utils.check_n_jobs", "modulename": "sslearn.utils", "qualname": "check_n_jobs", "kind": "function", "doc": "<p>Check <code>n_jobs</code> parameter according to the scikit-learn convention.\nFrom sktime: BSD 3-Clause</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>n_jobs</strong> (int, positive or -1):\nThe number of jobs for parallelization.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>n_jobs</strong> (int):\nChecked number of jobs.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n_jobs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper": {"fullname": "sslearn.wrapper", "modulename": "sslearn.wrapper", "kind": "module", "doc": "<p>Summary of module <code>sslearn.wrapper</code>:</p>\n\n<p>This module contains classes to train semi-supervised learning algorithms using a wrapper approach.</p>\n\n<h2 id=\"self-training-algorithms\">Self-Training Algorithms</h2>\n\n<ol>\n<li>SelfTraining : Self-training algorithm.</li>\n<li>Setred : Self-training with redundancy reduction.</li>\n</ol>\n\n<h2 id=\"co-training-algorithms\">Co-Training Algorithms</h2>\n\n<ol>\n<li>CoTraining : Co-training</li>\n<li>CoTrainingByCommittee : Co-training by committee</li>\n<li>DemocraticCoLearning : Democratic co-learning</li>\n<li>Rasco : Random subspace co-training</li>\n<li>RelRasco : Relevant random subspace co-training</li>\n<li>CoForest : Co-Forest</li>\n<li>TriTraining : Tri-training</li>\n<li>DeTriTraining : Data Editing Tri-training</li>\n<li>WiWTriTraining : Who-Is-Who Tri-training</li>\n</ol>\n\n<h2 id=\"all-doc\">All doc</h2>\n"}, "sslearn.wrapper.SelfTraining": {"fullname": "sslearn.wrapper.SelfTraining", "modulename": "sslearn.wrapper", "qualname": "SelfTraining", "kind": "class", "doc": "<p>Self-training classifier.</p>\n\n<p>This :term:<code>metaestimator</code> allows a given supervised classifier to function as a\nsemi-supervised classifier, allowing it to learn from unlabeled data. It\ndoes this by iteratively predicting pseudo-labels for the unlabeled data\nand adding them to the training set.</p>\n\n<p>The classifier will continue iterating until either max_iter is reached, or\nno pseudo-labels were added to the training set in the previous iteration.</p>\n\n<p>Read more in the :ref:<code>User Guide &lt;self_training&gt;</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_estimator</strong> (estimator object):\nAn estimator object implementing <code>fit</code> and <code>predict_proba</code>.\nInvoking the <code>fit</code> method will fit a clone of the passed estimator,\nwhich will be stored in the <code>base_estimator_</code> attribute.</li>\n<li><strong>threshold</strong> (float, default=0.75):\nThe decision threshold for use with <code>criterion='threshold'</code>.\nShould be in [0, 1). When using the <code>'threshold'</code> criterion, a\n:ref:<code>well calibrated classifier &lt;calibration&gt;</code> should be used.</li>\n<li><strong>criterion</strong> ({'threshold', 'k_best'}, default='threshold'):\nThe selection criterion used to select which labels to add to the\ntraining set. If <code>'threshold'</code>, pseudo-labels with prediction\nprobabilities above <code>threshold</code> are added to the dataset. If <code>'k_best'</code>,\nthe <code>k_best</code> pseudo-labels with highest prediction probabilities are\nadded to the dataset. When using the 'threshold' criterion, a\n:ref:<code>well calibrated classifier &lt;calibration&gt;</code> should be used.</li>\n<li><strong>k_best</strong> (int, default=10):\nThe amount of samples to add in each iteration. Only used when\n<code>criterion='k_best'</code>.</li>\n<li><strong>max_iter</strong> (int or None, default=10):\nMaximum number of iterations allowed. Should be greater than or equal\nto 0. If it is <code>None</code>, the classifier will continue to predict labels\nuntil no new pseudo-labels are added, or all unlabeled samples have\nbeen labeled.</li>\n<li><strong>verbose</strong> (bool, default=False):\nEnable verbose output.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>base_estimator_</strong> (estimator object):\nThe fitted estimator.</li>\n<li><strong>classes_</strong> (ndarray or list of ndarray of shape (n_classes,)):\nClass labels for each output. (Taken from the trained\n<code>base_estimator_</code>).</li>\n<li><strong>transduction_</strong> (ndarray of shape (n_samples,)):\nThe labels used for the final fit of the classifier, including\npseudo-labels added during fit.</li>\n<li><strong>labeled_iter_</strong> (ndarray of shape (n_samples,)):\nThe iteration in which each sample was labeled. When a sample has\niteration 0, the sample was already labeled in the original dataset.\nWhen a sample has iteration -1, the sample was not labeled in any\niteration.</li>\n<li><p><strong>n_features_in_</strong> (int):\nNumber of features seen during :term:<code>fit</code>.</p>\n\n<p><em>New in version 0.24.</em></p></li>\n<li><p><strong>feature_names_in_</strong> (ndarray of shape (<code>n_features_in_</code>,)):\nNames of features seen during :term:<code>fit</code>. Defined only when <code>X</code>\nhas feature names that are all strings.</p>\n\n<p><em>New in version 1.0.</em></p></li>\n<li><strong>n_iter_</strong> (int):\nThe number of rounds of self-training, that is the number of times the\nbase estimator is fitted on relabeled variants of the training set.</li>\n<li><p><strong>termination_condition_</strong> ({'max_iter', 'no_change', 'all_labeled'}):\nThe reason that fitting was stopped.</p>\n\n<ul>\n<li><code>'max_iter'</code>: <code>n_iter_</code> reached <code>max_iter</code>.</li>\n<li><code>'no_change'</code>: no new labels were predicted.</li>\n<li><code>'all_labeled'</code>: all unlabeled samples were labeled before <code>max_iter</code>\nwas reached.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"see-also\">See Also</h6>\n\n<p><code>LabelPropagation</code>:  Label propagation classifier. <br />\n<code>LabelSpreading</code>:  Label spreading model for semi-supervised learning.  </p>\n\n<h6 id=\"references\">References</h6>\n\n<p>:doi:<code>David Yarowsky. 1995. Unsupervised word sense disambiguation rivaling\nsupervised methods. In Proceedings of the 33rd annual meeting on\nAssociation for Computational Linguistics (ACL '95). Association for\nComputational Linguistics, Stroudsburg, PA, USA, 189-196.\n&lt;10.3115/981658.981684&gt;</code></p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">sklearn</span> <span class=\"kn\">import</span> <span class=\"n\">datasets</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">sklearn.semi_supervised</span> <span class=\"kn\">import</span> <span class=\"n\">SelfTrainingClassifier</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">sklearn.svm</span> <span class=\"kn\">import</span> <span class=\"n\">SVC</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rng</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">RandomState</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">iris</span> <span class=\"o\">=</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">load_iris</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">random_unlabeled_points</span> <span class=\"o\">=</span> <span class=\"n\">rng</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"n\">iris</span><span class=\"o\">.</span><span class=\"n\">target</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.3</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">iris</span><span class=\"o\">.</span><span class=\"n\">target</span><span class=\"p\">[</span><span class=\"n\">random_unlabeled_points</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">svc</span> <span class=\"o\">=</span> <span class=\"n\">SVC</span><span class=\"p\">(</span><span class=\"n\">probability</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">gamma</span><span class=\"o\">=</span><span class=\"s2\">&quot;auto&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">self_training_model</span> <span class=\"o\">=</span> <span class=\"n\">SelfTrainingClassifier</span><span class=\"p\">(</span><span class=\"n\">svc</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">self_training_model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">iris</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">iris</span><span class=\"o\">.</span><span class=\"n\">target</span><span class=\"p\">)</span>\n<span class=\"go\">SelfTrainingClassifier(...)</span>\n</code></pre>\n</div>\n", "bases": "sklearn.semi_supervised._self_training.SelfTrainingClassifier"}, "sslearn.wrapper.SelfTraining.__init__": {"fullname": "sslearn.wrapper.SelfTraining.__init__", "modulename": "sslearn.wrapper", "qualname": "SelfTraining.__init__", "kind": "function", "doc": "<p>Self-training. Adaptation of SelfTrainingClassifier from sklearn with data loader compatible.</p>\n\n<p>This class allows a given supervised classifier to function as a\nsemi-supervised classifier, allowing it to learn from unlabeled data. It\ndoes this by iteratively predicting pseudo-labels for the unlabeled data\nand adding them to the training set.</p>\n\n<p>The classifier will continue iterating until either max_iter is reached, or\nno pseudo-labels were added to the training set in the previous iteration.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_estimator</strong> (estimator object):\nAn estimator object implementing <code>fit</code> and <code>predict_proba</code>.\nInvoking the <code>fit</code> method will fit a clone of the passed estimator,\nwhich will be stored in the <code>base_estimator_</code> attribute.</li>\n<li><strong>threshold</strong> (float, default=0.75):\nThe decision threshold for use with <code>criterion='threshold'</code>.\nShould be in [0, 1). When using the 'threshold' criterion, a\n:ref:<code>well calibrated classifier &lt;calibration&gt;</code> should be used.</li>\n<li><strong>criterion</strong> ({'threshold', 'k_best'}, default='threshold'):\nThe selection criterion used to select which labels to add to the\ntraining set. If 'threshold', pseudo-labels with prediction\nprobabilities above <code>threshold</code> are added to the dataset. If 'k_best',\nthe <code>k_best</code> pseudo-labels with highest prediction probabilities are\nadded to the dataset. When using the 'threshold' criterion, a\n:ref:<code>well calibrated classifier &lt;calibration&gt;</code> should be used.</li>\n<li><strong>k_best</strong> (int, default=10):\nThe amount of samples to add in each iteration. Only used when\n<code>criterion</code> is k_best'.</li>\n<li><strong>max_iter</strong> (int or None, default=10):\nMaximum number of iterations allowed. Should be greater than or equal\nto 0. If it is <code>None</code>, the classifier will continue to predict labels\nuntil no new pseudo-labels are added, or all unlabeled samples have\nbeen labeled.</li>\n<li><strong>verbose</strong> (bool, default=False):\nEnable verbose output.</li>\n</ul>\n\n<h6 id=\"references\">References</h6>\n\n<p>David Yarowsky. 1995. Unsupervised word sense disambiguation rivaling\nsupervised methods. In Proceedings of the 33rd annual meeting on\nAssociation for Computational Linguistics (ACL '95). Association for\nComputational Linguistics, Stroudsburg, PA, USA, 189-196. DOI:\n<a href=\"https://doi.org/10.3115/981658.981684\">https://doi.org/10.3115/981658.981684</a></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span>,</span><span class=\"param\">\t<span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">0.75</span>,</span><span class=\"param\">\t<span class=\"n\">criterion</span><span class=\"o\">=</span><span class=\"s1\">&#39;threshold&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">k_best</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">max_iter</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span>)</span>"}, "sslearn.wrapper.SelfTraining.fit": {"fullname": "sslearn.wrapper.SelfTraining.fit", "modulename": "sslearn.wrapper", "qualname": "SelfTraining.fit", "kind": "function", "doc": "<p>Fits this <code>SelfTrainingClassifier</code> to a dataset.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nArray representing the data.</li>\n<li><strong>y</strong> ({array-like, sparse matrix} of shape (n_samples,)):\nArray representing the labels. Unlabeled samples should have the\nlabel -1.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (SelfTrainingClassifier):\nReturns an instance of self.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.CoTrainingByCommittee": {"fullname": "sslearn.wrapper.CoTrainingByCommittee", "modulename": "sslearn.wrapper", "qualname": "CoTrainingByCommittee", "kind": "class", "doc": "<p>Mixin class for all classifiers in scikit-learn.</p>\n", "bases": "sklearn.base.ClassifierMixin, sslearn.base.BaseEnsemble, sklearn.base.BaseEstimator"}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"fullname": "sslearn.wrapper.CoTrainingByCommittee.__init__", "modulename": "sslearn.wrapper", "qualname": "CoTrainingByCommittee.__init__", "kind": "function", "doc": "<p>Create a committee trained by cotraining based on\nthe diversity of classifiers.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ensemble_estimator</strong> (ClassifierMixin, optional):\nensemble method, works without a ensemble as\nself training with pool, by default BaggingClassifier().</li>\n<li><strong>max_iterations</strong> (int, optional):\nnumber of iterations of training, -1 if no max iterations, by default 100</li>\n<li><strong>poolsize</strong> (int, optional):\nmax number of unlabeled instances candidates to pseudolabel, by default 100</li>\n<li><strong>random_state</strong> (int, RandomState instance, optional):\ncontrols the randomness of the estimator, by default None</li>\n</ul>\n\n<h6 id=\"references\">References</h6>\n\n<p>M. F. A. Hady and F. Schwenker,\n\"Co-training by Committee: A New Semi-supervised Learning Framework,\"\n2008 IEEE International Conference on Data Mining Workshops,\nPisa, 2008, pp. 563-572, doi: 10.1109/ICDMW.2008.27.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">ensemble_estimator</span><span class=\"o\">=</span><span class=\"n\">BaggingClassifier</span><span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">max_iterations</span><span class=\"o\">=</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">poolsize</span><span class=\"o\">=</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">min_instances_for_class</span><span class=\"o\">=</span><span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"fullname": "sslearn.wrapper.CoTrainingByCommittee.fit", "modulename": "sslearn.wrapper", "qualname": "CoTrainingByCommittee.fit", "kind": "function", "doc": "<p>Build a CoTrainingByCommittee classifier from the training set (X, y).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe training input samples.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe target values (class labels), -1 if unlabel.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (CoTrainingByCommittee):\nFitted estimator.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"fullname": "sslearn.wrapper.CoTrainingByCommittee.predict", "modulename": "sslearn.wrapper", "qualname": "CoTrainingByCommittee.predict", "kind": "function", "doc": "<p>Predict class value for X.\nFor a classification model, the predicted class for each sample in X is returned.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe input samples.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe predicted classes</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"fullname": "sslearn.wrapper.CoTrainingByCommittee.predict_proba", "modulename": "sslearn.wrapper", "qualname": "CoTrainingByCommittee.predict_proba", "kind": "function", "doc": "<p>Predict class probabilities of the input samples X.\nThe predicted class probability depends on the ensemble estimator.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe input samples.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>y</strong> (ndarray of shape (n_samples, n_classes) or list of n_outputs such arrays if n_outputs &gt; 1):\nThe predicted classes</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.CoTrainingByCommittee.score": {"fullname": "sslearn.wrapper.CoTrainingByCommittee.score", "modulename": "sslearn.wrapper", "qualname": "CoTrainingByCommittee.score", "kind": "function", "doc": "<p>Return the mean accuracy on the given test data and labels.\nIn multi-label classification, this is the subset accuracy which is a harsh metric since you require for each sample that each label set be correctly predicted.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (array-like of shape (n_samples, n_features)):\nTest samples.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,) or (n_samples, n_outputs)):\nTrue labels for X.</li>\n<li><strong>sample_weight</strong> (array-like of shape (n_samples,), optional):\nSample weights., by default None</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>score</strong> (float):\nMean accuracy of self.predict(X) wrt. y.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">sample_weight</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"fullname": "sslearn.wrapper.CoTrainingByCommittee.set_score_request", "modulename": "sslearn.wrapper", "qualname": "CoTrainingByCommittee.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.Rasco": {"fullname": "sslearn.wrapper.Rasco", "modulename": "sslearn.wrapper", "qualname": "Rasco", "kind": "class", "doc": "<p>Base class for all estimators in scikit-learn.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>All estimators should specify all the parameters that can be set\nat the class level in their <code>__init__</code> as explicit keyword\narguments (no <code>*args</code> or <code>**kwargs</code>).</p>\n", "bases": "sslearn.wrapper._co.BaseCoTraining"}, "sslearn.wrapper.Rasco.__init__": {"fullname": "sslearn.wrapper.Rasco.__init__", "modulename": "sslearn.wrapper", "qualname": "Rasco.__init__", "kind": "function", "doc": "<p>Co-Training based on random subspaces</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_estimator</strong> (ClassifierMixin, optional):\nAn estimator object implementing fit and predict_proba, by default DecisionTreeClassifier()</li>\n<li><strong>max_iterations</strong> (int, optional):\nMaximum number of iterations allowed. Should be greater than or equal to 0.\nIf is -1 then will be infinite iterations until U be empty, by default 10</li>\n<li><strong>n_estimators</strong> (int, optional):\nThe number of base estimators in the ensemble., by default 30</li>\n<li><strong>subspace_size</strong> (int, optional):\nThe number of features for each subspace. If it is None will be the half of the features size., by default None</li>\n<li><strong>random_state</strong> (int, RandomState instance, optional):\ncontrols the randomness of the estimator, by default None</li>\n</ul>\n\n<h6 id=\"references\">References</h6>\n\n<p>Wang, J., Luo, S. W., &amp; Zeng, X. H. (2008, June).\nA random subspace method for co-training.\nIn <i>2008 IEEE International Joint Conference on Neural Networks</i>\n(IEEE World Congress on Computational Intelligence)\n(pp. 195-200). IEEE.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span><span class=\"o\">=</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">max_iterations</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">n_estimators</span><span class=\"o\">=</span><span class=\"mi\">30</span>,</span><span class=\"param\">\t<span class=\"n\">subspace_size</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "sslearn.wrapper.Rasco.fit": {"fullname": "sslearn.wrapper.Rasco.fit", "modulename": "sslearn.wrapper", "qualname": "Rasco.fit", "kind": "function", "doc": "<p>Build a Rasco classifier from the training set (X, y).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe training input samples.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe target values (class labels), -1 if unlabel.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (Rasco):\nFitted estimator.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.Rasco.set_score_request": {"fullname": "sslearn.wrapper.Rasco.set_score_request", "modulename": "sslearn.wrapper", "qualname": "Rasco.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.RelRasco": {"fullname": "sslearn.wrapper.RelRasco", "modulename": "sslearn.wrapper", "qualname": "RelRasco", "kind": "class", "doc": "<p>Base class for all estimators in scikit-learn.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>All estimators should specify all the parameters that can be set\nat the class level in their <code>__init__</code> as explicit keyword\narguments (no <code>*args</code> or <code>**kwargs</code>).</p>\n", "bases": "sslearn.wrapper._co.Rasco"}, "sslearn.wrapper.RelRasco.__init__": {"fullname": "sslearn.wrapper.RelRasco.__init__", "modulename": "sslearn.wrapper", "qualname": "RelRasco.__init__", "kind": "function", "doc": "<p>Co-Training with relevant random subspaces</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_estimator</strong> (ClassifierMixin, optional):\nAn estimator object implementing fit and predict_proba, by default DecisionTreeClassifier()</li>\n<li><strong>max_iterations</strong> (int, optional):\nMaximum number of iterations allowed. Should be greater than or equal to 0.\nIf is -1 then will be infinite iterations until U be empty, by default 10</li>\n<li><strong>n_estimators</strong> (int, optional):\nThe number of base estimators in the ensemble., by default 30</li>\n<li><strong>subspace_size</strong> (int, optional):\nThe number of features for each subspace. If it is None will be the half of the features size., by default None</li>\n<li><strong>random_state</strong> (int, RandomState instance, optional):\ncontrols the randomness of the estimator, by default None</li>\n<li><strong>n_jobs</strong> (int, optional):\nThe number of jobs to run in parallel. -1 means using all processors., by default None</li>\n</ul>\n\n<h6 id=\"references\">References</h6>\n\n<p>Yaslan, Y., &amp; Cataltepe, Z. (2010).\nCo-training with relevant random subspaces.\n<i>Neurocomputing</i>, 73(10-12), 1652-1661.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span><span class=\"o\">=</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">max_iterations</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">n_estimators</span><span class=\"o\">=</span><span class=\"mi\">30</span>,</span><span class=\"param\">\t<span class=\"n\">subspace_size</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "sslearn.wrapper.RelRasco.set_score_request": {"fullname": "sslearn.wrapper.RelRasco.set_score_request", "modulename": "sslearn.wrapper", "qualname": "RelRasco.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.TriTraining": {"fullname": "sslearn.wrapper.TriTraining", "modulename": "sslearn.wrapper", "qualname": "TriTraining", "kind": "class", "doc": "<p>Base class for all estimators in scikit-learn.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>All estimators should specify all the parameters that can be set\nat the class level in their <code>__init__</code> as explicit keyword\narguments (no <code>*args</code> or <code>**kwargs</code>).</p>\n", "bases": "sslearn.wrapper._co.BaseCoTraining"}, "sslearn.wrapper.TriTraining.__init__": {"fullname": "sslearn.wrapper.TriTraining.__init__", "modulename": "sslearn.wrapper", "qualname": "TriTraining.__init__", "kind": "function", "doc": "<p>TriTraining. Trio of classifiers with bootstrapping.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_estimator</strong> (ClassifierMixin, optional):\nAn estimator object implementing fit and predict_proba, by default DecisionTreeClassifier()</li>\n<li><strong>n_samples</strong> (int, optional):\nNumber of samples to generate.\nIf left to None this is automatically set to the first dimension of the arrays., by default None</li>\n<li><strong>random_state</strong> (int, RandomState instance, optional):\ncontrols the randomness of the estimator, by default None</li>\n<li><strong>n_jobs</strong> (int, optional):\nThe number of jobs to run in parallel for both <code>fit</code> and <code>predict</code>.\n<code>None</code> means 1 unless in a <code>joblib.parallel_backend</code> context.\n<code>-1</code> means using all processors., by default None</li>\n</ul>\n\n<h6 id=\"references\">References</h6>\n\n<p>Zhi-Hua Zhou and Ming Li,\n\"Tri-training: exploiting unlabeled data using three classifiers,\"\nin <i>IEEE Transactions on Knowledge and Data Engineering</i>,\nvol. 17, no. 11, pp. 1529-1541, Nov. 2005,\ndoi: 10.1109/TKDE.2005.186.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span><span class=\"o\">=</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">n_samples</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "sslearn.wrapper.TriTraining.fit": {"fullname": "sslearn.wrapper.TriTraining.fit", "modulename": "sslearn.wrapper", "qualname": "TriTraining.fit", "kind": "function", "doc": "<p>Build a TriTraining classifier from the training set (X, y).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe training input samples.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe target values (class labels), -1 if unlabeled.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (TriTraining):\nFitted estimator.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.TriTraining.set_score_request": {"fullname": "sslearn.wrapper.TriTraining.set_score_request", "modulename": "sslearn.wrapper", "qualname": "TriTraining.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.WiWTriTraining": {"fullname": "sslearn.wrapper.WiWTriTraining", "modulename": "sslearn.wrapper", "qualname": "WiWTriTraining", "kind": "class", "doc": "<p>Base class for all estimators in scikit-learn.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>All estimators should specify all the parameters that can be set\nat the class level in their <code>__init__</code> as explicit keyword\narguments (no <code>*args</code> or <code>**kwargs</code>).</p>\n", "bases": "sslearn.wrapper._tritraining.TriTraining"}, "sslearn.wrapper.WiWTriTraining.__init__": {"fullname": "sslearn.wrapper.WiWTriTraining.__init__", "modulename": "sslearn.wrapper", "qualname": "WiWTriTraining.__init__", "kind": "function", "doc": "<p>TriTraining with restriction Who-is-Who.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_estimator</strong> (ClassifierMixin, optional):\nAn estimator object implementing fit and predict_proba, by default DecisionTreeClassifier()</li>\n<li><strong>n_samples</strong> (int, optional):\nNumber of samples to generate.\nIf left to None this is automatically set to the first dimension of the arrays., by default None</li>\n<li><strong>n_jobs</strong> (int, optional):\nNumber of jobs to run in parallel. None means 1 unless in a joblib.parallel_backend context. -1 means using all processors., by default None</li>\n<li><strong>method</strong> (str, optional):\nThe method to use to assing class, it can be <code>greedy</code> to first-look or <code>hungarian</code> to use the Hungarian algorithm, by default \"hungarian\"</li>\n<li><strong>conflict_weighted</strong> (bool, default=True):\nWhether to weighted the confusion rate by the number of instances with the same group.</li>\n<li><strong>conflict_over</strong> (str, optional):\nThe conflict rate penalizes the \"measure error\" of basic TriTraining, it can be calculated over differentes subsamples of X, can be:\n<ul>\n<li>\"labeled\" over complete L,</li>\n<li>\"labeled_plus\" over complete L union L',</li>\n<li>\"unlabeled\u00a8: over complete U,</li>\n<li>\"all\": over complete X (LuU) and</li>\n<li>\"none\": don't penalize the \"meause error\", by default \"labeled\"</li>\n</ul></li>\n<li><strong>random_state</strong> (int, RandomState instance, optional):\ncontrols the randomness of the estimator, by default None</li>\n</ul>\n\n<h6 id=\"references\">References</h6>\n\n<p>Ludmila I. Kuncheva, Juan J. Rodr\u00edguez, Aaron S. Jackson,\nRestricted set classification: Who is there?,\nPattern Recognition, 63, 158-170, \n10.1016/j.patcog.2016.08.028</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span>,</span><span class=\"param\">\t<span class=\"n\">n_samples</span><span class=\"o\">=</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;hungarian&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">conflict_weighted</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">conflict_over</span><span class=\"o\">=</span><span class=\"s1\">&#39;labeled&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "sslearn.wrapper.WiWTriTraining.fit": {"fullname": "sslearn.wrapper.WiWTriTraining.fit", "modulename": "sslearn.wrapper", "qualname": "WiWTriTraining.fit", "kind": "function", "doc": "<p>Build a TriTraining classifier from the training set (X, y).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe training input samples.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe target values (class labels), -1 if unlabeled.</li>\n<li><strong>instance_group</strong> (array-like of shape (n_samples)):\nThe group. Two instances with the same label are not allowed to be in the same group.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (TriTraining):\nFitted estimator.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">instance_group</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.WiWTriTraining.predict": {"fullname": "sslearn.wrapper.WiWTriTraining.predict", "modulename": "sslearn.wrapper", "qualname": "WiWTriTraining.predict", "kind": "function", "doc": "<p>Predict the classes of X.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nArray representing the data.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>y</strong> (ndarray of shape (n_samples,)):\nArray with predicted labels.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">instance_group</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"fullname": "sslearn.wrapper.WiWTriTraining.set_fit_request", "modulename": "sslearn.wrapper", "qualname": "WiWTriTraining.set_fit_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"fullname": "sslearn.wrapper.WiWTriTraining.set_predict_request", "modulename": "sslearn.wrapper", "qualname": "WiWTriTraining.set_predict_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"fullname": "sslearn.wrapper.WiWTriTraining.set_score_request", "modulename": "sslearn.wrapper", "qualname": "WiWTriTraining.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.CoTraining": {"fullname": "sslearn.wrapper.CoTraining", "modulename": "sslearn.wrapper", "qualname": "CoTraining", "kind": "class", "doc": "<p>Base class for all estimators in scikit-learn.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>All estimators should specify all the parameters that can be set\nat the class level in their <code>__init__</code> as explicit keyword\narguments (no <code>*args</code> or <code>**kwargs</code>).</p>\n", "bases": "sslearn.wrapper._co.BaseCoTraining"}, "sslearn.wrapper.CoTraining.__init__": {"fullname": "sslearn.wrapper.CoTraining.__init__", "modulename": "sslearn.wrapper", "qualname": "CoTraining.__init__", "kind": "function", "doc": "<p>Create a CoTraining classifier. \nMulti-view learning algorithm that uses two classifiers to label instances.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_estimator</strong> (ClassifierMixin, optional):\nThe classifier that will be used in the cotraining algorithm on the feature set, by default DecisionTreeClassifier()</li>\n<li><strong>second_base_estimator</strong> (ClassifierMixin, optional):\nThe classifier that will be used in the cotraining algorithm on another feature set, if none are a clone of base_estimator, by default None</li>\n<li><strong>max_iterations</strong> (int, optional):\nThe number of iterations, by default 30</li>\n<li><strong>poolsize</strong> (int, optional):\nThe size of the pool of unlabeled samples from which the classifier can choose, by default 75</li>\n<li><strong>threshold</strong> (float, optional):\nThe threshold for label instances, by default 0.5</li>\n<li><strong>force_second_view</strong> (bool, optional):\nThe second classifier needs a different view of the data. If False then a second view will be same as the first, by default True</li>\n<li><strong>random_state</strong> (int, RandomState instance, optional):\ncontrols the randomness of the estimator, by default None</li>\n</ul>\n\n<h6 id=\"references\">References</h6>\n\n<p>Avrim Blum and Tom Mitchell. 1998.\nCombining labeled and unlabeled data with co-training.\nIn Proceedings of the eleventh annual conference on Computational learning theory (COLT' 98).\nAssociation for Computing Machinery, New York, NY, USA, 92-100.\nDOI:<a href=\"https://doi.org/10.1145/279943.279962\">https://doi.org/10.1145/279943.279962</a></p>\n\n<p>Han, Xian-Hua, Yen-wei Chen, and Xiang Ruan. 2011. \n'Multi-Class Co-Training Learning for Object and Scene Recognition'.\nPp. 67-70 in. Nara, Japan.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span><span class=\"o\">=</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">second_base_estimator</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_iterations</span><span class=\"o\">=</span><span class=\"mi\">30</span>,</span><span class=\"param\">\t<span class=\"n\">poolsize</span><span class=\"o\">=</span><span class=\"mi\">75</span>,</span><span class=\"param\">\t<span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">force_second_view</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "sslearn.wrapper.CoTraining.fit": {"fullname": "sslearn.wrapper.CoTraining.fit", "modulename": "sslearn.wrapper", "qualname": "CoTraining.fit", "kind": "function", "doc": "<p>Build a CoTraining classifier from the training set.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nArray representing the data.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe target values (class labels), -1 if unlabeled.</li>\n<li><strong>X2</strong> ({array-like, sparse matrix} of shape (n_samples, n_features), optional):\nArray representing the data from another view, not compatible with <code>features</code>, by default None</li>\n<li><strong>features</strong> ({list, tuple}, optional):\nlist or tuple of two arrays with <code>feature</code> index for each subspace view, not compatible with <code>X2</code>, by default None</li>\n<li><strong>number_per_class</strong> ({dict}, optional):\ndict of class name:integer with the max ammount of instances to label in this class in each iteration, by default None</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (CoTraining):\nFitted estimator.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">X</span>,</span><span class=\"param\">\t<span class=\"n\">y</span>,</span><span class=\"param\">\t<span class=\"n\">X2</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">features</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">number_per_class</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.CoTraining.predict_proba": {"fullname": "sslearn.wrapper.CoTraining.predict_proba", "modulename": "sslearn.wrapper", "qualname": "CoTraining.predict_proba", "kind": "function", "doc": "<p>Predict probability for each possible outcome.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nArray representing the data.</li>\n<li><strong>X2</strong> ({array-like, sparse matrix} of shape (n_samples, n_features), optional):\nArray representing the data from another view, by default None</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>class probabilities</strong> (ndarray of shape (n_samples, n_classes)):\nArray with prediction probabilities.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">X2</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.CoTraining.predict": {"fullname": "sslearn.wrapper.CoTraining.predict", "modulename": "sslearn.wrapper", "qualname": "CoTraining.predict", "kind": "function", "doc": "<p>Predict the classes of X.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nArray representing the data.</li>\n<li><strong>X2</strong> ({array-like, sparse matrix} of shape (n_samples, n_features), optional):\nArray representing the data from another view, by default None</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>y</strong> (ndarray of shape (n_samples,)):\nArray with predicted labels.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">X2</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.CoTraining.score": {"fullname": "sslearn.wrapper.CoTraining.score", "modulename": "sslearn.wrapper", "qualname": "CoTraining.score", "kind": "function", "doc": "<p>Return the mean accuracy on the given test data and labels.\nIn multi-label classification, this is the subset accuracy\nwhich is a harsh metric since you require for each sample that\neach label set be correctly predicted.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (array-like of shape (n_samples, n_features)):\nTest samples.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,) or (n_samples, n_outputs)):\nTrue labels for <code>X</code>.</li>\n<li><strong>sample_weight</strong> (array-like of shape (n_samples,), default=None):\nSample weights.</li>\n<li><strong>X2</strong> ({array-like, sparse matrix} of shape (n_samples, n_features), optional):\nArray representing the data from another view, by default None</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>score</strong> (float):\nMean accuracy of <code>self.predict(X)</code> wrt. <code>y</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">sample_weight</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.CoTraining.set_fit_request": {"fullname": "sslearn.wrapper.CoTraining.set_fit_request", "modulename": "sslearn.wrapper", "qualname": "CoTraining.set_fit_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.CoTraining.set_predict_request": {"fullname": "sslearn.wrapper.CoTraining.set_predict_request", "modulename": "sslearn.wrapper", "qualname": "CoTraining.set_predict_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"fullname": "sslearn.wrapper.CoTraining.set_predict_proba_request", "modulename": "sslearn.wrapper", "qualname": "CoTraining.set_predict_proba_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.CoTraining.set_score_request": {"fullname": "sslearn.wrapper.CoTraining.set_score_request", "modulename": "sslearn.wrapper", "qualname": "CoTraining.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.DeTriTraining": {"fullname": "sslearn.wrapper.DeTriTraining", "modulename": "sslearn.wrapper", "qualname": "DeTriTraining", "kind": "class", "doc": "<p>Base class for all estimators in scikit-learn.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>All estimators should specify all the parameters that can be set\nat the class level in their <code>__init__</code> as explicit keyword\narguments (no <code>*args</code> or <code>**kwargs</code>).</p>\n", "bases": "sslearn.wrapper._tritraining.TriTraining"}, "sslearn.wrapper.DeTriTraining.__init__": {"fullname": "sslearn.wrapper.DeTriTraining.__init__", "modulename": "sslearn.wrapper", "qualname": "DeTriTraining.__init__", "kind": "function", "doc": "<p>DeTriTraining - TriTraining with Depurated and Clustering.\nAvoid the noise generated by the TriTraining algorithm by depurating the enlarged dataset and clustering the instances.        </p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_estimator</strong> (ClassifierMixin, optional):\nAn estimator object implementing fit and predict_proba, by default DecisionTreeClassifier()</li>\n<li><strong>n_samples</strong> (int, optional):\nNumber of samples to generate. \nIf left to None this is automatically set to the first dimension of the arrays., by default None</li>\n<li><strong>k_neighbors</strong> (int, optional):\nNumber of neighbors for depurate classification. \nIf at least k_neighbors/2+1 have a class other than the one predicted, the class is ignored., by default 3</li>\n<li><strong>mode</strong> (string, optional):\nHow to calculate the cluster each instance belongs to.\nIf <code>seeded</code> each instance belong to nearest cluster.\nIf <code>constrained</code> each instance belong to nearest cluster unless the instance is in to enlarged dataset, \nthen the instance belongs to the cluster of its class., by default <code>seeded</code></li>\n<li><strong>max_iterations</strong> (int, optional):\nMaximum number of iterations, by default 100</li>\n<li><strong>n_jobs</strong> (int, optional):\nThe number of parallel jobs to run for neighbors search. \nNone means 1 unless in a joblib.parallel_backend context. -1 means using all processors. \nDoesn't affect fit method., by default None</li>\n<li><strong>random_state</strong> (int, RandomState instance, optional):\ncontrols the randomness of the estimator, by default None</li>\n</ul>\n\n<h6 id=\"references\">References</h6>\n\n<p>Deng C., Guo M.Z. (2006)\nTri-training and Data Editing Based Semi-supervised Clustering Algorithm. \nIn: Gelbukh A., Reyes-Garcia C.A. (eds) MICAI 2006: Advances in Artificial Intelligence. MICAI 2006. \nLecture Notes in Computer Science, vol 4293.\nSpringer, Berlin, Heidelberg.\n<a href=\"https://doi.org/10.1007/11925231_61\">https://doi.org/10.1007/11925231_61</a></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span><span class=\"o\">=</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">k_neighbors</span><span class=\"o\">=</span><span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">n_samples</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;seeded&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">max_iterations</span><span class=\"o\">=</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "sslearn.wrapper.DeTriTraining.fit": {"fullname": "sslearn.wrapper.DeTriTraining.fit", "modulename": "sslearn.wrapper", "qualname": "DeTriTraining.fit", "kind": "function", "doc": "<p>Build a DeTriTraining classifier from the training set (X, y).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe training input samples.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe target values (class labels), -1 if unlabel.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (DeTriTraining):\nFitted estimator.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.DeTriTraining.set_score_request": {"fullname": "sslearn.wrapper.DeTriTraining.set_score_request", "modulename": "sslearn.wrapper", "qualname": "DeTriTraining.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.DemocraticCoLearning": {"fullname": "sslearn.wrapper.DemocraticCoLearning", "modulename": "sslearn.wrapper", "qualname": "DemocraticCoLearning", "kind": "class", "doc": "<p>Base class for all estimators in scikit-learn.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>All estimators should specify all the parameters that can be set\nat the class level in their <code>__init__</code> as explicit keyword\narguments (no <code>*args</code> or <code>**kwargs</code>).</p>\n", "bases": "sslearn.wrapper._co.BaseCoTraining"}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"fullname": "sslearn.wrapper.DemocraticCoLearning.__init__", "modulename": "sslearn.wrapper", "qualname": "DemocraticCoLearning.__init__", "kind": "function", "doc": "<p>Democratic Co-learning. Ensemble of classifiers of different types.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_estimator</strong> ({ClassifierMixin, list}, optional):\nAn estimator object implementing fit and predict_proba or a list of ClassifierMixin, by default DecisionTreeClassifier()</li>\n<li><strong>n_estimators</strong> (int, optional):\nnumber of base_estimators to use. None if base_estimator is a list, by default None</li>\n<li><strong>expand_only_mislabeled</strong> (bool, optional):\nexpand only mislabeled instances by itself, by default True</li>\n<li><strong>alpha</strong> (float, optional):\nconfidence level, by default 0.95</li>\n<li><strong>q_exp</strong> (int, optional):\nexponent for the estimation for error rate, by default 2</li>\n<li><strong>random_state</strong> (int, RandomState instance, optional):\ncontrols the randomness of the estimator, by default None</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>AttributeError</strong>: If n_estimators is None and base_estimator is not a list</li>\n</ul>\n\n<h6 id=\"references\">References</h6>\n\n<p>Y. Zhou and S. Goldman, \"Democratic co-learning,\"\n16th IEEE International Conference on Tools with Artificial Intelligence,\n2004, pp. 594-602, doi: 10.1109/ICTAI.2004.48.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">(),</span> <span class=\"n\">GaussianNB</span><span class=\"p\">(),</span> <span class=\"n\">KNeighborsClassifier</span><span class=\"p\">(</span><span class=\"n\">n_neighbors</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)]</span>,</span><span class=\"param\">\t<span class=\"n\">n_estimators</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">expand_only_mislabeled</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.95</span>,</span><span class=\"param\">\t<span class=\"n\">q_exp</span><span class=\"o\">=</span><span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "sslearn.wrapper.DemocraticCoLearning.fit": {"fullname": "sslearn.wrapper.DemocraticCoLearning.fit", "modulename": "sslearn.wrapper", "qualname": "DemocraticCoLearning.fit", "kind": "function", "doc": "<p>Fit Democratic-Co classifier</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe training input samples.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe target values (class labels), -1 if unlabel.</li>\n<li><strong>estimator_kwards</strong> ({list, dict}, optional):\nlist of kwards for each estimator or kwards for all estimators, by default None</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (DemocraticCoLearning):\nfitted classifier</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">estimator_kwards</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"fullname": "sslearn.wrapper.DemocraticCoLearning.predict_proba", "modulename": "sslearn.wrapper", "qualname": "DemocraticCoLearning.predict_proba", "kind": "function", "doc": "<p>Predict probability for each possible outcome.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nArray representing the data.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>class probabilities</strong> (ndarray of shape (n_samples, n_classes)):\nArray with prediction probabilities.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"fullname": "sslearn.wrapper.DemocraticCoLearning.set_fit_request", "modulename": "sslearn.wrapper", "qualname": "DemocraticCoLearning.set_fit_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"fullname": "sslearn.wrapper.DemocraticCoLearning.set_score_request", "modulename": "sslearn.wrapper", "qualname": "DemocraticCoLearning.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.Setred": {"fullname": "sslearn.wrapper.Setred", "modulename": "sslearn.wrapper", "qualname": "Setred", "kind": "class", "doc": "<p>Mixin class for all classifiers in scikit-learn.</p>\n", "bases": "sklearn.base.ClassifierMixin, sklearn.base.BaseEstimator"}, "sslearn.wrapper.Setred.__init__": {"fullname": "sslearn.wrapper.Setred.__init__", "modulename": "sslearn.wrapper", "qualname": "Setred.__init__", "kind": "function", "doc": "<p>Create a SETRED classifier.\nIt is a self-training algorithm that uses a rejection mechanism to avoid adding noisy samples to the training set.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_estimator</strong> (ClassifierMixin, optional):\nAn estimator object implementing fit and predict_proba,, by default DecisionTreeClassifier(), by default KNeighborsClassifier(n_neighbors=3)</li>\n<li><strong>max_iterations</strong> (int, optional):\nMaximum number of iterations allowed. Should be greater than or equal to 0., by default 40</li>\n<li><strong>distance</strong> (str, optional):\nThe distance metric to use for the graph.\nThe default metric is euclidean, and with p=2 is equivalent to the standard Euclidean metric.\nFor a list of available metrics, see the documentation of DistanceMetric and the metrics listed in sklearn.metrics.pairwise.PAIRWISE_DISTANCE_FUNCTIONS.\nNote that the \u201ccosine\u201d metric uses cosine_distances., by default \"euclidean\"</li>\n<li><strong>poolsize</strong> (float, optional):\nMax number of unlabel instances candidates to pseudolabel, by default 0.25</li>\n<li><strong>rejection_threshold</strong> (float, optional):\nsignificance level, by default 0.1</li>\n<li><strong>graph_neighbors</strong> (int, optional):\nNumber of neighbors for each sample., by default 1</li>\n<li><strong>random_state</strong> (int, RandomState instance, optional):\ncontrols the randomness of the estimator, by default None</li>\n<li><strong>n_jobs</strong> (int, optional):\nThe number of parallel jobs to run for neighbors search. None means 1 unless in a joblib.parallel_backend context. -1 means using all processors, by default None</li>\n</ul>\n\n<h6 id=\"references\">References</h6>\n\n<p>Li, Ming, and Zhi-Hua Zhou. \"SETRED: Self-training with editing.\"\nPacific-Asia Conference on Knowledge Discovery and Data Mining.\nSpringer, Berlin, Heidelberg, 2005. doi: 10.1007/11430919_71.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span><span class=\"o\">=</span><span class=\"n\">KNeighborsClassifier</span><span class=\"p\">(</span><span class=\"n\">n_neighbors</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">max_iterations</span><span class=\"o\">=</span><span class=\"mi\">40</span>,</span><span class=\"param\">\t<span class=\"n\">distance</span><span class=\"o\">=</span><span class=\"s1\">&#39;euclidean&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">poolsize</span><span class=\"o\">=</span><span class=\"mf\">0.25</span>,</span><span class=\"param\">\t<span class=\"n\">rejection_threshold</span><span class=\"o\">=</span><span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">graph_neighbors</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "sslearn.wrapper.Setred.fit": {"fullname": "sslearn.wrapper.Setred.fit", "modulename": "sslearn.wrapper", "qualname": "Setred.fit", "kind": "function", "doc": "<p>Build a Setred classifier from the training set (X, y).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe training input samples.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe target values (class labels), -1 if unlabeled.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (Setred):\nFitted estimator.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwars</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.Setred.predict": {"fullname": "sslearn.wrapper.Setred.predict", "modulename": "sslearn.wrapper", "qualname": "Setred.predict", "kind": "function", "doc": "<p>Predict class value for X.\nFor a classification model, the predicted class for each sample in X is returned.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe input samples.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe predicted classes</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.Setred.predict_proba": {"fullname": "sslearn.wrapper.Setred.predict_proba", "modulename": "sslearn.wrapper", "qualname": "Setred.predict_proba", "kind": "function", "doc": "<p>Predict class probabilities of the input samples X.\nThe predicted class probability depends on the ensemble estimator.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe input samples.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>y</strong> (ndarray of shape (n_samples, n_classes) or list of n_outputs such arrays if n_outputs &gt; 1):\nThe predicted classes</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.Setred.set_score_request": {"fullname": "sslearn.wrapper.Setred.set_score_request", "modulename": "sslearn.wrapper", "qualname": "Setred.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.CoForest": {"fullname": "sslearn.wrapper.CoForest", "modulename": "sslearn.wrapper", "qualname": "CoForest", "kind": "class", "doc": "<p>Base class for all estimators in scikit-learn.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>All estimators should specify all the parameters that can be set\nat the class level in their <code>__init__</code> as explicit keyword\narguments (no <code>*args</code> or <code>**kwargs</code>).</p>\n", "bases": "sslearn.wrapper._co.BaseCoTraining"}, "sslearn.wrapper.CoForest.__init__": {"fullname": "sslearn.wrapper.CoForest.__init__", "modulename": "sslearn.wrapper", "qualname": "CoForest.__init__", "kind": "function", "doc": "<p>Generate a CoForest classifier.\nA SSL Random Forest adaption for CoTraining. </p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_estimator</strong> (ClassifierMixin, optional):\nAn estimator object implementing fit and predict_proba, by default DecisionTreeClassifier()</li>\n<li><strong>n_estimators</strong> (int, optional):\nThe number of base estimators in the ensemble., by default 7</li>\n<li><strong>threshold</strong> (float, optional):\nThe decision threshold. Should be in [0, 1)., by default 0.5</li>\n<li><strong>n_jobs</strong> (int, optional):\nThe number of jobs to run in parallel for both fit and predict., by default None</li>\n<li><strong>bootstrap</strong> (bool, optional):\nWhether bootstrap samples are used when building estimators., by default True</li>\n<li><strong>random_state</strong> (int, RandomState instance, optional):\ncontrols the randomness of the estimator, by default None</li>\n<li><strong>**kwards</strong> (dict, optional):\nAdditional parameters to be passed to base_estimator, by default None.</li>\n</ul>\n\n<h6 id=\"references\">References</h6>\n\n<p>Li, M., &amp; Zhou, Z.-H. (2007).\nImprove Computer-Aided Diagnosis With Machine Learning Techniques Using Undiagnosed Samples.\n<i>IEEE Transactions on Systems, Man, and Cybernetics - Part A: Systems and Humans</i>,\n37(6), 1088-1098. doi:10.1109/tsmca.2007.904745</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span><span class=\"o\">=</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">n_estimators</span><span class=\"o\">=</span><span class=\"mi\">7</span>,</span><span class=\"param\">\t<span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">0.75</span>,</span><span class=\"param\">\t<span class=\"n\">bootstrap</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s1\">&#39;1.0.3&#39;</span></span>)</span>"}, "sslearn.wrapper.CoForest.fit": {"fullname": "sslearn.wrapper.CoForest.fit", "modulename": "sslearn.wrapper", "qualname": "CoForest.fit", "kind": "function", "doc": "<p>Build a CoForest classifier from the training set (X, y).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe training input samples.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe target values (class labels), -1 if unlabel.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (CoForest):\nFitted estimator.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.CoForest.set_score_request": {"fullname": "sslearn.wrapper.CoForest.set_score_request", "modulename": "sslearn.wrapper", "qualname": "CoForest.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"sslearn": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 566}, "sslearn.base": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 67}, "sslearn.base.FakedProbaClassifier": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 9, "doc": 11}, "sslearn.base.FakedProbaClassifier.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 40}, "sslearn.base.FakedProbaClassifier.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 68}, "sslearn.base.FakedProbaClassifier.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 59}, "sslearn.base.FakedProbaClassifier.predict_proba": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 78}, "sslearn.base.FakedProbaClassifier.set_score_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 208}, "sslearn.base.get_dataset": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 117}, "sslearn.base.OneVsRestSSLClassifier": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 1072}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 63}, "sslearn.base.OneVsRestSSLClassifier.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 80}, "sslearn.base.OneVsRestSSLClassifier.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 66}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 162}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 208}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 208}, "sslearn.datasets": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 89}, "sslearn.datasets.read_csv": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 53, "bases": 0, "doc": 134}, "sslearn.datasets.read_keel": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 158}, "sslearn.datasets.secure_dataset": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 70}, "sslearn.datasets.save_keel": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 97, "bases": 0, "doc": 163}, "sslearn.model_selection": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 63}, "sslearn.model_selection.artificial_ssl_dataset": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 329}, "sslearn.restricted": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 77}, "sslearn.restricted.WhoIsWhoClassifier": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 9, "doc": 51}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 118}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 113}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 84}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 92}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 63}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 208}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 208}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 208}, "sslearn.restricted.conflict_rate": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 113}, "sslearn.subview": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 54}, "sslearn.subview.SubViewClassifier": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 51}, "sslearn.subview.SubViewClassifier.predict_proba": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 64}, "sslearn.subview.SubViewClassifier.set_score_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 208}, "sslearn.subview.SubViewRegressor": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 51}, "sslearn.subview.SubViewRegressor.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 56}, "sslearn.subview.SubViewRegressor.set_score_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 208}, "sslearn.utils": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 95}, "sslearn.utils.safe_division": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 73}, "sslearn.utils.confidence_interval": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 102}, "sslearn.utils.choice_with_proportion": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 111}, "sslearn.utils.calculate_prior_probability": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 56}, "sslearn.utils.check_n_jobs": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 64}, "sslearn.wrapper": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 133}, "sslearn.wrapper.SelfTraining": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 1135}, "sslearn.wrapper.SelfTraining.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 73, "bases": 0, "doc": 406}, "sslearn.wrapper.SelfTraining.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 85}, "sslearn.wrapper.CoTrainingByCommittee": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 9, "doc": 11}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 68, "bases": 0, "doc": 148}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 79}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 71}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 82}, "sslearn.wrapper.CoTrainingByCommittee.score": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 129}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 208}, "sslearn.wrapper.Rasco": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 51}, "sslearn.wrapper.Rasco.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 79, "bases": 0, "doc": 189}, "sslearn.wrapper.Rasco.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 79}, "sslearn.wrapper.Rasco.set_score_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 208}, "sslearn.wrapper.RelRasco": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 51}, "sslearn.wrapper.RelRasco.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 79, "bases": 0, "doc": 195}, "sslearn.wrapper.RelRasco.set_score_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 208}, "sslearn.wrapper.TriTraining": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 51}, "sslearn.wrapper.TriTraining.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 184}, "sslearn.wrapper.TriTraining.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 79}, "sslearn.wrapper.TriTraining.set_score_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 208}, "sslearn.wrapper.WiWTriTraining": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 51}, "sslearn.wrapper.WiWTriTraining.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 90, "bases": 0, "doc": 303}, "sslearn.wrapper.WiWTriTraining.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 110}, "sslearn.wrapper.WiWTriTraining.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 59}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 208}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 208}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 208}, "sslearn.wrapper.CoTraining": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 51}, "sslearn.wrapper.CoTraining.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 92, "bases": 0, "doc": 277}, "sslearn.wrapper.CoTraining.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 81, "bases": 0, "doc": 174}, "sslearn.wrapper.CoTraining.predict_proba": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 90}, "sslearn.wrapper.CoTraining.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 86}, "sslearn.wrapper.CoTraining.score": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 162}, "sslearn.wrapper.CoTraining.set_fit_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 208}, "sslearn.wrapper.CoTraining.set_predict_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 208}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 208}, "sslearn.wrapper.CoTraining.set_score_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 208}, "sslearn.wrapper.DeTriTraining": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 51}, "sslearn.wrapper.DeTriTraining.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 94, "bases": 0, "doc": 312}, "sslearn.wrapper.DeTriTraining.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 79}, "sslearn.wrapper.DeTriTraining.set_score_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 208}, "sslearn.wrapper.DemocraticCoLearning": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 51}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 105, "bases": 0, "doc": 199}, "sslearn.wrapper.DemocraticCoLearning.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 95}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 63}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 208}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 208}, "sslearn.wrapper.Setred": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 11}, "sslearn.wrapper.Setred.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 118, "bases": 0, "doc": 296}, "sslearn.wrapper.Setred.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 79}, "sslearn.wrapper.Setred.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 71}, "sslearn.wrapper.Setred.predict_proba": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 82}, "sslearn.wrapper.Setred.set_score_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 208}, "sslearn.wrapper.CoForest": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 51}, "sslearn.wrapper.CoForest.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 95, "bases": 0, "doc": 211}, "sslearn.wrapper.CoForest.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 79}, "sslearn.wrapper.CoForest.set_score_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 208}}, "length": 106, "save": true}, "index": {"qualname": {"root": {"docs": {"sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 14, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}}, "df": 18}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 14}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}}, "df": 20}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}}, "df": 9, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.utils.calculate_prior_probability": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.utils.calculate_prior_probability": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 24, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}}, "df": 6}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.secure_dataset": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}}, "df": 3}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 17}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.safe_division": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}}, "df": 3}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 24}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {"sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {"sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}}, "df": 4}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.get_dataset": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.get_dataset": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.utils.safe_division": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}}, "df": 4}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}}, "df": 10, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 4}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.calculate_prior_probability": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}}}}}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}, "n": {"docs": {"sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 1}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}}, "df": 4}}}}}}}}}}}}}, "fullname": {"root": {"docs": {"sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 14, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1}, "sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.datasets": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.subview": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 106}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 24, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}}, "df": 6}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.secure_dataset": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 2}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}}, "df": 3}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 17}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.safe_division": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"sslearn.subview": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}}, "df": 7, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}}, "df": 3}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}}, "df": 15}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}}, "df": 18}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 14}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}}, "df": 20}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}}, "df": 9, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.utils.calculate_prior_probability": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.utils.calculate_prior_probability": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 24}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.restricted": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}}, "df": 11}}}}}}}}, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {"sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {"sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}}, "df": 4}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.get_dataset": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.get_dataset": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 3, "s": {"docs": {"sslearn.datasets": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}}, "df": 5}}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.utils.safe_division": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}}, "df": 4}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}}, "df": 10, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 4}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.calculate_prior_probability": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}}}}}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}}, "df": 7}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 59}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.utils": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 6}}}}}, "n": {"docs": {"sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 1}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}}, "df": 4}}}}}}}}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"docs": {}, "df": 0}}, "signature": {"root": {"0": {"5": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}, "docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}}, "df": 8}, "1": {"0": {"0": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 3}, "docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 3}, "docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 4}, "2": {"5": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}, "docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}, "3": {"0": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 3}, "9": {"docs": {"sslearn.datasets.read_csv": {"tf": 1.4142135623730951}, "sslearn.datasets.read_keel": {"tf": 2}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 2}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}}, "df": 9}, "docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 5}, "4": {"0": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}, "7": {"5": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 3}, "docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}, "8": {"docs": {"sslearn.datasets.read_keel": {"tf": 1}}, "df": 1}, "9": {"5": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"sslearn.base.FakedProbaClassifier.__init__": {"tf": 2.8284271247461903}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 4.242640687119285}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 3.7416573867739413}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 3.7416573867739413}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 3.1622776601683795}, "sslearn.base.get_dataset": {"tf": 3.7416573867739413}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 4.58257569495584}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 4.898979485566356}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 4.47213595499958}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 4.47213595499958}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 3.1622776601683795}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 3.1622776601683795}, "sslearn.datasets.read_csv": {"tf": 6.48074069840786}, "sslearn.datasets.read_keel": {"tf": 7.615773105863909}, "sslearn.datasets.secure_dataset": {"tf": 3.7416573867739413}, "sslearn.datasets.save_keel": {"tf": 8.774964387392123}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 7.681145747868608}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 5.0990195135927845}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 5.656854249492381}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 4.242640687119285}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 4.242640687119285}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 3.7416573867739413}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 3.1622776601683795}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 3.1622776601683795}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 3.1622776601683795}, "sslearn.restricted.conflict_rate": {"tf": 4.69041575982343}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 3.7416573867739413}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 3.1622776601683795}, "sslearn.subview.SubViewRegressor.predict": {"tf": 3.7416573867739413}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 3.1622776601683795}, "sslearn.utils.safe_division": {"tf": 4.242640687119285}, "sslearn.utils.confidence_interval": {"tf": 5.0990195135927845}, "sslearn.utils.choice_with_proportion": {"tf": 5.0990195135927845}, "sslearn.utils.calculate_prior_probability": {"tf": 3.1622776601683795}, "sslearn.utils.check_n_jobs": {"tf": 3.1622776601683795}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 7.483314773547883}, "sslearn.wrapper.SelfTraining.fit": {"tf": 4.242640687119285}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 7.211102550927978}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 4.898979485566356}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 3.7416573867739413}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 3.7416573867739413}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 5.0990195135927845}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.Rasco.__init__": {"tf": 7.810249675906654}, "sslearn.wrapper.Rasco.fit": {"tf": 4.898979485566356}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.RelRasco.__init__": {"tf": 7.810249675906654}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.TriTraining.__init__": {"tf": 6.557438524302}, "sslearn.wrapper.TriTraining.fit": {"tf": 4.898979485566356}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 8.18535277187245}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 5.656854249492381}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 4.242640687119285}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.CoTraining.__init__": {"tf": 8.366600265340756}, "sslearn.wrapper.CoTraining.fit": {"tf": 8.18535277187245}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 5.291502622129181}, "sslearn.wrapper.CoTraining.predict": {"tf": 5.291502622129181}, "sslearn.wrapper.CoTraining.score": {"tf": 5.656854249492381}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 8.48528137423857}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 4.898979485566356}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 9}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 5.0990195135927845}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 3.7416573867739413}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.Setred.__init__": {"tf": 9.433981132056603}, "sslearn.wrapper.Setred.fit": {"tf": 4.898979485566356}, "sslearn.wrapper.Setred.predict": {"tf": 4.47213595499958}, "sslearn.wrapper.Setred.predict_proba": {"tf": 4.47213595499958}, "sslearn.wrapper.Setred.set_score_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.CoForest.__init__": {"tf": 8.48528137423857}, "sslearn.wrapper.CoForest.fit": {"tf": 4.898979485566356}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 3.1622776601683795}}, "df": 82, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 12}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 15, "s": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 4}}}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.datasets.read_keel": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.utils.safe_division": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}}, "df": 32}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 11}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}}, "df": 2, "s": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 2}}}}, "x": {"2": {"docs": {"sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}}, "df": 3}, "docs": {"sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}}, "df": 37}, "y": {"docs": {"sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}}, "df": 22}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 24}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "f": {"docs": {"sslearn.datasets.read_keel": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}}, "df": 10, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1.7320508075688772}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}}, "df": 22}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.save_keel": {"tf": 1.7320508075688772}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.CoTraining.fit": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 9}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.CoTraining.fit": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.restricted.conflict_rate": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.CoTraining.fit": {"tf": 1}}, "df": 1}}}, "k": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 2, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}}, "df": 19}}, "s": {"docs": {"sslearn.wrapper.Setred.fit": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}}, "df": 3, "s": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 7}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 4}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 11}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.restricted.conflict_rate": {"tf": 1}}, "df": 1}}}}}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.CoTraining.fit": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 7}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}}, "df": 5, "s": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 6}}}}}}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 3}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "b": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.utils.safe_division": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.utils.safe_division": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.CoTraining.fit": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}, "bases": {"root": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred": {"tf": 1.4142135623730951}}, "df": 8}}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 11}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"sslearn.subview.SubViewClassifier": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewRegressor": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred": {"tf": 1.4142135623730951}}, "df": 6, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}}, "df": 4}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}, "o": {"docs": {"sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 6}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.subview.SubViewRegressor": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {"sslearn.wrapper.RelRasco": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.WiWTriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 8}}}}}}}}}, "doc": {"root": {"0": {"2": {"8": {"docs": {"sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"6": {"2": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 24}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"docs": {"sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 1}, "docs": {"sslearn": {"tf": 2.6457513110645907}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 2.6457513110645907}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2.8284271247461903}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}}, "df": 12, "/": {"1": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "1": {"0": {"0": {"7": {"docs": {}, "df": 0, "/": {"1": {"1": {"4": {"3": {"0": {"9": {"1": {"9": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"2": {"5": {"2": {"3": {"1": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 3}, "1": {"6": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "j": {"docs": {"sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 1}}}, "docs": {}, "df": 0}, "6": {"2": {"3": {"8": {"8": {"9": {"docs": {"sslearn": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"8": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "9": {"8": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 2}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 11}, "1": {"0": {"9": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "w": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}}}}}}}, "docs": {}, "df": 0}, "4": {"5": {"docs": {}, "df": 0, "/": {"2": {"7": {"9": {"9": {"4": {"3": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}}, "df": 1}, "2": {"docs": {"sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 1}, "3": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "5": {"2": {"9": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "4": {"1": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "8": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 2}, "docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}, "6": {"0": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1.4142135623730951}}, "df": 24}, "5": {"2": {"docs": {"sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"1": {"docs": {"sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}, "7": {"0": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 2}, "docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}}, "df": 1}, "8": {"6": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}}, "df": 1}, "9": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "9": {"5": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}}, "df": 1}, "6": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}, "9": {"5": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}, "8": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}, "docs": {"sslearn": {"tf": 2.8284271247461903}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 3.1622776601683795}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 2}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1.4142135623730951}}, "df": 56}, "2": {"0": {"0": {"4": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "5": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 2}, "6": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.7320508075688772}}, "df": 1}, "7": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "8": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}}, "df": 1}, "1": {"0": {"docs": {"sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 1}, "1": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}, "6": {"docs": {"sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 1}, "7": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "2": {"4": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 2.23606797749979}}, "df": 1}, "3": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "4": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 2}, "5": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}, "7": {"9": {"9": {"6": {"2": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 1}, "docs": {"sslearn": {"tf": 2}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 28, "d": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}, "3": {"0": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 3}, "1": {"1": {"5": {"docs": {}, "df": 0, "/": {"9": {"8": {"1": {"6": {"5": {"8": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}}, "6": {"2": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 24}, "docs": {}, "df": 0}, "7": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}, "docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 29}, "4": {"0": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}, "2": {"9": {"3": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}, "8": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}, "docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 2}, "5": {"0": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}, "2": {"8": {"1": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"3": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "7": {"2": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "9": {"4": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 2.8284271247461903}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 3}, "6": {"0": {"2": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "1": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}, "3": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 2}, "7": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}, "docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}, "7": {"0": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}, "1": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}, "3": {"docs": {"sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 1}, "5": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 3}, "docs": {"sslearn": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 2}, "8": {"6": {"1": {"7": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1.4142135623730951}}, "df": 24}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}}, "df": 2}, "9": {"0": {"4": {"7": {"4": {"5": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}}, "df": 1}, "2": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}, "5": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 4}, "8": {"1": {"6": {"8": {"4": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}, "docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"sslearn": {"tf": 19.924858845171276}, "sslearn.base": {"tf": 4.58257569495584}, "sslearn.base.FakedProbaClassifier": {"tf": 1.7320508075688772}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 3.872983346207417}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 5.744562646538029}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 5.196152422706632}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 5.0990195135927845}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 9.539392014169456}, "sslearn.base.get_dataset": {"tf": 6.708203932499369}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 22.338307903688676}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 4.358898943540674}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 5.744562646538029}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 5.196152422706632}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 6.244997998398398}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 9.539392014169456}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 9.539392014169456}, "sslearn.datasets": {"tf": 5.5677643628300215}, "sslearn.datasets.read_csv": {"tf": 6.928203230275509}, "sslearn.datasets.read_keel": {"tf": 7.54983443527075}, "sslearn.datasets.secure_dataset": {"tf": 5.830951894845301}, "sslearn.datasets.save_keel": {"tf": 7.3484692283495345}, "sslearn.model_selection": {"tf": 4.58257569495584}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 9.695359714832659}, "sslearn.restricted": {"tf": 4.58257569495584}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 4}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 5.744562646538029}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 6.244997998398398}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 5.656854249492381}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 5.744562646538029}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 5.196152422706632}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 9.539392014169456}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 9.539392014169456}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 9.539392014169456}, "sslearn.restricted.conflict_rate": {"tf": 6.244997998398398}, "sslearn.subview": {"tf": 4}, "sslearn.subview.SubViewClassifier": {"tf": 4}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 5.196152422706632}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 9.539392014169456}, "sslearn.subview.SubViewRegressor": {"tf": 4}, "sslearn.subview.SubViewRegressor.predict": {"tf": 5.196152422706632}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 9.539392014169456}, "sslearn.utils": {"tf": 4.358898943540674}, "sslearn.utils.safe_division": {"tf": 5.830951894845301}, "sslearn.utils.confidence_interval": {"tf": 6.324555320336759}, "sslearn.utils.choice_with_proportion": {"tf": 6.324555320336759}, "sslearn.utils.calculate_prior_probability": {"tf": 5}, "sslearn.utils.check_n_jobs": {"tf": 5.291502622129181}, "sslearn.wrapper": {"tf": 7.483314773547883}, "sslearn.wrapper.SelfTraining": {"tf": 21.93171219946131}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 9.1104335791443}, "sslearn.wrapper.SelfTraining.fit": {"tf": 5.916079783099616}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 5.916079783099616}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 5.744562646538029}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 5.0990195135927845}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 5.0990195135927845}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 6.164414002968976}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 9.539392014169456}, "sslearn.wrapper.Rasco": {"tf": 4}, "sslearn.wrapper.Rasco.__init__": {"tf": 6.4031242374328485}, "sslearn.wrapper.Rasco.fit": {"tf": 5.744562646538029}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 9.539392014169456}, "sslearn.wrapper.RelRasco": {"tf": 4}, "sslearn.wrapper.RelRasco.__init__": {"tf": 6.782329983125268}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 9.539392014169456}, "sslearn.wrapper.TriTraining": {"tf": 4}, "sslearn.wrapper.TriTraining.__init__": {"tf": 6.928203230275509}, "sslearn.wrapper.TriTraining.fit": {"tf": 5.744562646538029}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 9.539392014169456}, "sslearn.wrapper.WiWTriTraining": {"tf": 4}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 8.94427190999916}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 6.244997998398398}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 5.196152422706632}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 9.539392014169456}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 9.539392014169456}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 9.539392014169456}, "sslearn.wrapper.CoTraining": {"tf": 4}, "sslearn.wrapper.CoTraining.__init__": {"tf": 7.280109889280518}, "sslearn.wrapper.CoTraining.fit": {"tf": 7.3484692283495345}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 5.656854249492381}, "sslearn.wrapper.CoTraining.predict": {"tf": 5.656854249492381}, "sslearn.wrapper.CoTraining.score": {"tf": 7.14142842854285}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 9.539392014169456}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 9.539392014169456}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 9.539392014169456}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 9.539392014169456}, "sslearn.wrapper.DeTriTraining": {"tf": 4}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 7.54983443527075}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 5.744562646538029}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 9.539392014169456}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 4}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 7.416198487095663}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 6}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 5.196152422706632}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 9.539392014169456}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 9.539392014169456}, "sslearn.wrapper.Setred": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.__init__": {"tf": 7.483314773547883}, "sslearn.wrapper.Setred.fit": {"tf": 5.744562646538029}, "sslearn.wrapper.Setred.predict": {"tf": 5.0990195135927845}, "sslearn.wrapper.Setred.predict_proba": {"tf": 5.0990195135927845}, "sslearn.wrapper.Setred.set_score_request": {"tf": 9.539392014169456}, "sslearn.wrapper.CoForest": {"tf": 4}, "sslearn.wrapper.CoForest.__init__": {"tf": 7.211102550927978}, "sslearn.wrapper.CoForest.fit": {"tf": 5.744562646538029}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 9.539392014169456}}, "df": 106, "s": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.model_selection": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 11}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 4}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.subview": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {"sslearn.base.FakedProbaClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining": {"tf": 2.23606797749979}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}}, "df": 21, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}}}}}}}}}}}}, "t": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2.23606797749979}, "sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 2}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1.4142135623730951}}, "df": 56, "s": {"docs": {"sslearn.model_selection": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.fit": {"tf": 1.4142135623730951}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.get_dataset": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 3, "n": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}}, "df": 2}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}}, "df": 1}, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets": {"tf": 1.7320508075688772}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.datasets.secure_dataset": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 2}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.model_selection": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2.23606797749979}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 11}}}}}}}}, "m": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.datasets": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.subview": {"tf": 1}, "sslearn.wrapper": {"tf": 1}}, "df": 6}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}}, "df": 3}}, "b": {"docs": {"sslearn.subview": {"tf": 1.7320508075688772}}, "df": 1, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"sslearn.subview": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.subview": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.subview": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}}, "df": 4, "s": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.base": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 2.23606797749979}, "sslearn.base": {"tf": 1}, "sslearn.datasets": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.subview": {"tf": 1}, "sslearn.wrapper": {"tf": 1}}, "df": 7}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 17}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}}, "df": 3}}}, "h": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 11}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.datasets.read_csv": {"tf": 1.7320508075688772}, "sslearn.datasets.read_keel": {"tf": 2}, "sslearn.datasets.save_keel": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1.4142135623730951}}, "df": 30, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 25}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 2.23606797749979}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 2, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.model_selection": {"tf": 1}}, "df": 1}}}}}}}}}}, "y": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 4}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 2}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 5}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.FakedProbaClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}}, "df": 30}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}}, "df": 1}}, "y": {"docs": {"sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 11}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 2}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.FakedProbaClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.base.get_dataset": {"tf": 2.23606797749979}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.restricted.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 1.4142135623730951}, "sslearn.utils.choice_with_proportion": {"tf": 1.7320508075688772}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2.23606797749979}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.score": {"tf": 2}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.fit": {"tf": 1.4142135623730951}}, "df": 40}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 43}}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 2}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 33, "s": {"docs": {"sslearn.base.FakedProbaClassifier.fit": {"tf": 1.7320508075688772}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.base.get_dataset": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 2}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 2.23606797749979}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 2}, "sslearn.restricted.conflict_rate": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 2}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1.7320508075688772}, "sslearn.utils.confidence_interval": {"tf": 1.7320508075688772}, "sslearn.utils.choice_with_proportion": {"tf": 1.7320508075688772}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2.23606797749979}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 2.23606797749979}, "sslearn.wrapper.Rasco.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 2}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.score": {"tf": 2.449489742783178}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.predict_proba": {"tf": 2}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.fit": {"tf": 1.7320508075688772}}, "df": 46}}}}, "e": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.restricted.conflict_rate": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 9}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets": {"tf": 1.7320508075688772}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}}, "df": 2}}, "f": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.utils": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 24}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}}, "df": 3}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}}, "df": 1}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 3}}}, "v": {"docs": {}, "df": 0, "m": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 2}, "c": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 2}}, "df": 2}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "l": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.7320508075688772}}, "df": 2, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 19, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.model_selection": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.wrapper": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 9}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 14}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 4, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.utils": {"tf": 1}}, "df": 2}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.FakedProbaClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1.7320508075688772}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.restricted.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 1.4142135623730951}, "sslearn.utils.choice_with_proportion": {"tf": 1.7320508075688772}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.score": {"tf": 2}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1.4142135623730951}}, "df": 41}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 2}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1.4142135623730951}}, "df": 34, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.datasets": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}}, "df": 2}, "r": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 2}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.base.get_dataset": {"tf": 2}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.7320508075688772}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1.4142135623730951}}, "df": 17, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1.7320508075688772}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining": {"tf": 2.8284271247461903}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 7}}, "s": {"docs": {"sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 2}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 3.3166247903554}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}}, "df": 21, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}}, "o": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}}, "df": 1}, "u": {"docs": {"sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 2.23606797749979}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}}, "df": 3}}, "t": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 3, "h": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 3.1622776601683795}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 4.58257569495584}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 3.3166247903554}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 3.1622776601683795}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 3.1622776601683795}, "sslearn.datasets": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 2}, "sslearn.datasets.read_keel": {"tf": 2}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 2.6457513110645907}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 4.123105625617661}, "sslearn.restricted": {"tf": 2}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 2.449489742783178}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 2.6457513110645907}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 2.6457513110645907}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 2.449489742783178}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 3.1622776601683795}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 3.1622776601683795}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 3.1622776601683795}, "sslearn.restricted.conflict_rate": {"tf": 2.6457513110645907}, "sslearn.subview": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 2}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 3.1622776601683795}, "sslearn.subview.SubViewRegressor": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 3.1622776601683795}, "sslearn.utils": {"tf": 2.6457513110645907}, "sslearn.utils.safe_division": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 2.449489742783178}, "sslearn.utils.choice_with_proportion": {"tf": 2}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 5.830951894845301}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 4.358898943540674}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.Rasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.Rasco.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.RelRasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 2.8284271247461903}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.TriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.TriTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.WiWTriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 3.4641016151377544}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 2.449489742783178}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 4}, "sslearn.wrapper.CoTraining.fit": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.score": {"tf": 2}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.DeTriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 3.872983346207417}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.Setred.__init__": {"tf": 3.3166247903554}, "sslearn.wrapper.Setred.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.predict_proba": {"tf": 2.23606797749979}, "sslearn.wrapper.Setred.set_score_request": {"tf": 3.1622776601683795}, "sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 2.449489742783178}, "sslearn.wrapper.CoForest.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 3.1622776601683795}}, "df": 96, "y": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}}, "df": 2}, "n": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 11}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 2}}, "m": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.7320508075688772}, "sslearn.datasets.read_csv": {"tf": 1.4142135623730951}, "sslearn.datasets.read_keel": {"tf": 1.4142135623730951}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 24}, "n": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 2.23606797749979}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.datasets": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 42}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 3}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 3}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}}, "df": 5}}}}}, "e": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.score": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn": {"tf": 1}, "sslearn.model_selection": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 2.6457513110645907}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {"sslearn.wrapper": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}}, "o": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 36}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.restricted": {"tf": 1}, "sslearn.subview": {"tf": 1.7320508075688772}, "sslearn.wrapper": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper": {"tf": 3.3166247903554}, "sslearn.wrapper.SelfTraining": {"tf": 3}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.fit": {"tf": 1.4142135623730951}}, "df": 24}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}}, "df": 21, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.datasets.save_keel": {"tf": 1.7320508075688772}}, "df": 3}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 3.4641016151377544}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.datasets": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1.4142135623730951}, "sslearn.datasets.read_keel": {"tf": 1.4142135623730951}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 2.449489742783178}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.subview": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1.4142135623730951}, "sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.safe_division": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1.4142135623730951}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 3.4641016151377544}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 3.4641016151377544}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.__init__": {"tf": 2}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 3}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 3.1622776601683795}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1.4142135623730951}}, "df": 62, "m": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}}, "df": 10}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 3.605551275463989}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 45}, "t": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.datasets": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1.7320508075688772}, "sslearn.datasets.read_keel": {"tf": 1.7320508075688772}, "sslearn.datasets.secure_dataset": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 41, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 3}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 2.449489742783178}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}}, "df": 3, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}}, "df": 9}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 3.872983346207417}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 2.23606797749979}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.datasets": {"tf": 1.4142135623730951}, "sslearn.datasets.read_csv": {"tf": 1.4142135623730951}, "sslearn.datasets.read_keel": {"tf": 1.4142135623730951}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 3.7416573867739413}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 2}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 68, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"sslearn": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 2.449489742783178}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 16, "s": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 17}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.fit": {"tf": 1}}, "df": 21}}}, "t": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 2}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 2}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco.__init__": {"tf": 2}, "sslearn.wrapper.RelRasco.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.__init__": {"tf": 2}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.7320508075688772}}, "df": 19, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 1.4142135623730951}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 3}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 3}}}}}}}}}, "o": {"docs": {"sslearn.datasets": {"tf": 1}, "sslearn.model_selection": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}}}}, "x": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 2}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 11}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining": {"tf": 2}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 11}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 2.449489742783178}}, "df": 2}}}, "f": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 2}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 2}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 2}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1.4142135623730951}}, "df": 55}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 5}}}}, "a": {"docs": {"sslearn": {"tf": 1}, "sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 2.23606797749979}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 3}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 2.23606797749979}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 2.23606797749979}, "sslearn.datasets": {"tf": 2.449489742783178}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.restricted": {"tf": 2}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 2.23606797749979}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 2.23606797749979}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 2.23606797749979}, "sslearn.restricted.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.subview": {"tf": 2.23606797749979}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 2.23606797749979}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 2.23606797749979}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2.6457513110645907}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 2.23606797749979}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 2.23606797749979}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 2.23606797749979}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 2.23606797749979}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 2.23606797749979}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 2.23606797749979}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.__init__": {"tf": 2}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 2.23606797749979}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 2}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 2.23606797749979}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 2.23606797749979}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 2.23606797749979}, "sslearn.wrapper.Setred.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 2.23606797749979}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 2.23606797749979}}, "df": 66, "n": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 2}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 17, "d": {"docs": {"sslearn.base": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 2}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.datasets": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 2}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 2}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 2}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 2}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 47}, "y": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}}, "df": 5}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.model_selection": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 5}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.base.FakedProbaClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1.7320508075688772}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 2}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 2}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.restricted.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 1.4142135623730951}, "sslearn.utils.choice_with_proportion": {"tf": 2.449489742783178}, "sslearn.utils.calculate_prior_probability": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.fit": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.fit": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.predict": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.score": {"tf": 2.23606797749979}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1.4142135623730951}}, "df": 42, "s": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}}, "df": 6}}}}, "e": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 35}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 11}}}}}}, "s": {"docs": {"sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 11}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}, "o": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2.23606797749979}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2}}, "df": 3}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 2}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.datasets": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1.7320508075688772}, "sslearn.subview": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewRegressor": {"tf": 1.7320508075688772}, "sslearn.utils": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2.23606797749979}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1.7320508075688772}}, "df": 32, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 9}}, "s": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 6, "s": {"docs": {"sslearn.wrapper": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 24}}, "s": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 24}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 4}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.score": {"tf": 1.7320508075688772}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 24}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}, "s": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 45, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 3}}}}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.wrapper": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 13, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 4, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}}, "df": 3}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 4}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.CoTraining.fit": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {"sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 2, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1.4142135623730951}}, "df": 25}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}, "a": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1.4142135623730951}, "sslearn.datasets.read_keel": {"tf": 1.4142135623730951}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.utils": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 2, "s": {"docs": {"sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 2}, "sslearn.base.get_dataset": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 2}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 2}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 2}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 2}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 2}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 2}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 2}, "sslearn.utils.safe_division": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 2}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 2}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 2}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 2}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 2}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 2}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 2}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 2}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 2}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 2}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 2}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 2}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 2}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 2}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 2}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 2}}, "df": 95}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 8, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"sslearn.utils": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.datasets.read_csv": {"tf": 1.4142135623730951}, "sslearn.datasets.read_keel": {"tf": 1.4142135623730951}, "sslearn.datasets.save_keel": {"tf": 1}}, "df": 3}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}, "s": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.restricted.conflict_rate": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}}, "df": 31, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1.4142135623730951}}, "df": 16}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.restricted": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}}, "df": 7, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 2}}, "df": 5}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.utils": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 15, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}}, "df": 10}}}, "y": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 2}, "sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.calculate_prior_probability": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}}, "df": 8}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 7}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 3}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.choice_with_proportion": {"tf": 1.7320508075688772}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.utils": {"tf": 1}}, "df": 1, "i": {"docs": {"sslearn.utils": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1.4142135623730951}}, "df": 2, "t": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 24}, "r": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 3}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 2.449489742783178}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2.23606797749979}}, "df": 2, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "p": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 5}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.4142135623730951}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 3.1622776601683795}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2.6457513110645907}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2.6457513110645907}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 2}, "sslearn.wrapper.Setred.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1.4142135623730951}}, "df": 70, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.datasets": {"tf": 1.4142135623730951}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"sslearn.datasets": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.model_selection": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1.7320508075688772}, "sslearn.datasets": {"tf": 1.4142135623730951}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2.23606797749979}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}}, "df": 20}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 2.6457513110645907}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining": {"tf": 2.8284271247461903}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1.7320508075688772}}, "df": 42, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}}, "df": 12}}}, "s": {"docs": {"sslearn.wrapper.SelfTraining.fit": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets": {"tf": 1.4142135623730951}, "sslearn.datasets.read_csv": {"tf": 1.7320508075688772}, "sslearn.datasets.read_keel": {"tf": 2}}, "df": 3}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 5}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "b": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}}, "df": 5, "s": {"docs": {"sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 2.449489742783178}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 2}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 2}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}}, "df": 40}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 2}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 2}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 2}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 2}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 2}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 2}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 2}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 2}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 2}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 2}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 2}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 2}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 2}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 2}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 2}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 2}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 2}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 2}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 2}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 2}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 2}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 2}, "sslearn.wrapper.Setred.set_score_request": {"tf": 2}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 2}}, "df": 28, "s": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.datasets": {"tf": 1.4142135623730951}, "sslearn.model_selection": {"tf": 1.4142135623730951}, "sslearn.restricted": {"tf": 1}, "sslearn.utils": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 6}}}}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}}}}}}, "s": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 6}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 12}}}}}, "m": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"sslearn.base.FakedProbaClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}}, "df": 32}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}}, "df": 1}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}}, "df": 3}}, "x": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 2.449489742783178}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}}, "df": 9, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 6}}}}}, "n": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1, "l": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}}, "df": 8}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.datasets": {"tf": 1.4142135623730951}, "sslearn.model_selection": {"tf": 1.4142135623730951}, "sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.subview": {"tf": 1.4142135623730951}, "sslearn.utils": {"tf": 1}, "sslearn.wrapper": {"tf": 1.4142135623730951}}, "df": 7}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 24}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1.7320508075688772}}, "df": 35, "s": {"docs": {"sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 27}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 2}}, "df": 3, "s": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.score": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}}, "df": 7}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 2}}}, "g": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.score": {"tf": 1}}, "df": 5, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 2.449489742783178}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 2.23606797749979}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}}, "df": 3, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 2.449489742783178}}, "df": 2}}, "r": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}}, "df": 1}}, "f": {"docs": {"sslearn": {"tf": 1}, "sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1.7320508075688772}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1.7320508075688772}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 2.23606797749979}, "sslearn.base.get_dataset": {"tf": 2.23606797749979}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 3.3166247903554}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 2.6457513110645907}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 2.23606797749979}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 2.23606797749979}, "sslearn.datasets": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2.6457513110645907}, "sslearn.restricted": {"tf": 2.23606797749979}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 2}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 2.23606797749979}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 2.23606797749979}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 2.23606797749979}, "sslearn.restricted.conflict_rate": {"tf": 2.23606797749979}, "sslearn.subview": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 2.23606797749979}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 2.23606797749979}, "sslearn.utils": {"tf": 2}, "sslearn.utils.safe_division": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 2}, "sslearn.utils.choice_with_proportion": {"tf": 3.1622776601683795}, "sslearn.utils.calculate_prior_probability": {"tf": 2}, "sslearn.utils.check_n_jobs": {"tf": 1.4142135623730951}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 4}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 2.23606797749979}, "sslearn.wrapper.Rasco.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.Rasco.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 2.23606797749979}, "sslearn.wrapper.RelRasco.__init__": {"tf": 2.449489742783178}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 2.23606797749979}, "sslearn.wrapper.TriTraining.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.TriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 2.23606797749979}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 2.23606797749979}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 2.23606797749979}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.CoTraining.fit": {"tf": 2.449489742783178}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.predict": {"tf": 2}, "sslearn.wrapper.CoTraining.score": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 2.23606797749979}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 2.23606797749979}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 2.23606797749979}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 2.23606797749979}, "sslearn.wrapper.Setred.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.Setred.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict_proba": {"tf": 2}, "sslearn.wrapper.Setred.set_score_request": {"tf": 2.23606797749979}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 2.23606797749979}}, "df": 89}, "n": {"docs": {"sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 14, "l": {"docs": {}, "df": 0, "y": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 2}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.4142135623730951}}, "df": 5}}, "e": {"docs": {"sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 3.1622776601683795}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 3, "v": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 2}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "r": {"docs": {"sslearn.base.get_dataset": {"tf": 2}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1.4142135623730951}, "sslearn.datasets.read_keel": {"tf": 1.4142135623730951}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.subview": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2.23606797749979}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 36, "g": {"docs": {}, "df": 0, "/": {"1": {"0": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "3": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 24}}}}}}}}}}}}}}}}}}, "docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 24}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 2, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 17}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.7320508075688772}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 4, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "s": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1.4142135623730951}}, "df": 4}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1.7320508075688772}, "sslearn.datasets.read_keel": {"tf": 2}, "sslearn.datasets.save_keel": {"tf": 2.449489742783178}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2.449489742783178}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.RelRasco.__init__": {"tf": 2.449489742783178}, "sslearn.wrapper.TriTraining.__init__": {"tf": 2}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 2.449489742783178}, "sslearn.wrapper.CoTraining.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 2.449489742783178}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 2.8284271247461903}, "sslearn.wrapper.CoForest.__init__": {"tf": 2.6457513110645907}}, "df": 24}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.datasets.read_keel": {"tf": 1}}, "df": 1, "a": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.subview": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 27, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.base": {"tf": 1.4142135623730951}, "sslearn.base.get_dataset": {"tf": 1}, "sslearn.datasets": {"tf": 2.23606797749979}, "sslearn.datasets.read_csv": {"tf": 1.4142135623730951}, "sslearn.datasets.read_keel": {"tf": 1.4142135623730951}, "sslearn.datasets.secure_dataset": {"tf": 1.4142135623730951}, "sslearn.datasets.save_keel": {"tf": 2.6457513110645907}, "sslearn.model_selection": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 14, "s": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.base": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.datasets": {"tf": 1.4142135623730951}, "sslearn.model_selection": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}}, "df": 6}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.get_dataset": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1, "d": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1.4142135623730951}}, "df": 24}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 2}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 2}, "sslearn.datasets.read_keel": {"tf": 2.23606797749979}, "sslearn.datasets.save_keel": {"tf": 2.6457513110645907}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2.449489742783178}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2.23606797749979}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 2.449489742783178}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 2}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 2.449489742783178}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 3.1622776601683795}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 52}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}}, "df": 3, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 8, ":": {"1": {"0": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 5, "n": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}}, "c": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.datasets": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.subview": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.wrapper": {"tf": 1}}, "df": 7, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}, "n": {"docs": {"sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1}}, "df": 4, "n": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.utils.safe_division": {"tf": 1.4142135623730951}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.safe_division": {"tf": 1.7320508075688772}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.utils.safe_division": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.datasets": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1.7320508075688772}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}}, "df": 2}}}}}}, "e": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1.4142135623730951}}, "df": 24, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1.4142135623730951}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}}, "df": 2, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}}, "df": 2}}}, "p": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 11}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {"sslearn.datasets.read_keel": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 2.449489742783178}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 3.1622776601683795}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 2}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 2}, "sslearn.wrapper.CoForest.fit": {"tf": 1}}, "df": 31, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.7320508075688772}}, "df": 19}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.choice_with_proportion": {"tf": 1.4142135623730951}, "sslearn.utils.calculate_prior_probability": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}}, "df": 22}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 7}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.utils.safe_division": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}, "j": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 4, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 6}}}, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 2}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1.7320508075688772}, "sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.check_n_jobs": {"tf": 2.23606797749979}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}}, "df": 10}}, "s": {"docs": {"sslearn": {"tf": 1}}, "df": 1, "e": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1.4142135623730951}}, "df": 24, "t": {"docs": {"sslearn": {"tf": 2.449489742783178}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 4.795831523312719}, "sslearn.wrapper.SelfTraining": {"tf": 6.082762530298219}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}}, "df": 6}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.model_selection": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 5, "d": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}}, "df": 3}}}}}}}}, "o": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}}, "df": 8}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"sslearn.restricted": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 2}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1.7320508075688772}}, "df": 8}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 5}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {"sslearn.base.FakedProbaClassifier.fit": {"tf": 1.7320508075688772}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1.7320508075688772}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 2}, "sslearn.base.get_dataset": {"tf": 2.8284271247461903}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 3.1622776601683795}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 2.23606797749979}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 2.23606797749979}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 2}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2.23606797749979}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 2}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 2.23606797749979}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 2}, "sslearn.restricted.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 2}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1.7320508075688772}, "sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 1.7320508075688772}, "sslearn.utils.choice_with_proportion": {"tf": 1.7320508075688772}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining": {"tf": 2.6457513110645907}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 2.449489742783178}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 2.449489742783178}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 2}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.fit": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 2.449489742783178}, "sslearn.wrapper.CoTraining.predict": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.score": {"tf": 2.8284271247461903}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 2}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.predict_proba": {"tf": 2.449489742783178}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.fit": {"tf": 1.7320508075688772}}, "df": 51, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 5}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 2}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco.__init__": {"tf": 2}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 2}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 2}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}}, "df": 21, "s": {"docs": {"sslearn.utils": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"sslearn.utils.safe_division": {"tf": 2}}, "df": 1}}}}}}, "o": {"docs": {"sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2.23606797749979}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 15, "t": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 15, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 36}}}, "n": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1.7320508075688772}, "sslearn.datasets.read_keel": {"tf": 1.7320508075688772}, "sslearn.datasets.save_keel": {"tf": 2.23606797749979}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2.23606797749979}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco.__init__": {"tf": 2}, "sslearn.wrapper.TriTraining.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 2.449489742783178}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 2}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.7320508075688772}}, "df": 25}}, "v": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}, "y": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 2.23606797749979}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2.449489742783178}, "sslearn.wrapper.SelfTraining": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}}, "df": 12}}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 29}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}, "s": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.__init__": {"tf": 2}}, "df": 2, "/": {"2": {"docs": {}, "df": 0, "+": {"1": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 2.23606797749979}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1.4142135623730951}}, "df": 27, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}}, "df": 3}, ":": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.CoTraining.fit": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}}, "df": 2}, "y": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}, "c": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 19, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.restricted.conflict_rate": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.utils": {"tf": 1.7320508075688772}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 5, "d": {"docs": {"sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}}, "df": 2}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.utils.safe_division": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {"sslearn.wrapper": {"tf": 2.6457513110645907}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}}, "df": 7, "d": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 25}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}}, "df": 2, "s": {"docs": {"sslearn.datasets": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.subview": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.wrapper": {"tf": 1}}, "df": 6}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 11}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.datasets": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.utils": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.restricted.conflict_rate": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.7320508075688772}}, "df": 5}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 5}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 5}}}}}}}, "e": {"docs": {"sslearn.restricted": {"tf": 1}}, "df": 1, "d": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}, "s": {"docs": {"sslearn.restricted.conflict_rate": {"tf": 1}}, "df": 1}, "r": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.WiWTriTraining.__init__": {"tf": 2}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.restricted": {"tf": 1.4142135623730951}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.datasets.read_csv": {"tf": 1.4142135623730951}, "sslearn.datasets.read_keel": {"tf": 1.4142135623730951}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 5, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 28, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.choice_with_proportion": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 2.23606797749979}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1.4142135623730951}, "sslearn.datasets.read_keel": {"tf": 1.4142135623730951}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1.7320508075688772}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 2}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 75, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 2.8284271247461903}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 2.23606797749979}, "sslearn.model_selection": {"tf": 1}, "sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.subview": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1.4142135623730951}}, "df": 24}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 2.8284271247461903}, "sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.subview": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 3}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2.449489742783178}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}}, "df": 21, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 14}}}}}, "s": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}}, "df": 8}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 2.23606797749979}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}}, "df": 11}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}}, "df": 1}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.safe_division": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 2}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 30, "d": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1.4142135623730951}}, "df": 24}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.model_selection": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 2.449489742783178}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2.449489742783178}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"sslearn.datasets": {"tf": 1.4142135623730951}, "sslearn.datasets.read_csv": {"tf": 1}}, "df": 2}}, "y": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1.7320508075688772}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2.23606797749979}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 2}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 2}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 60, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.utils": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 2.23606797749979}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2.23606797749979}}, "df": 4}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2.23606797749979}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 2}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.7320508075688772}}, "df": 28, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 5}}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "y": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.datasets": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1.7320508075688772}, "sslearn.datasets.read_keel": {"tf": 2}, "sslearn.datasets.save_keel": {"tf": 2.449489742783178}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 2.449489742783178}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 2.449489742783178}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 2}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 3}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 3}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 57}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 36, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}}, "df": 1, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 2.23606797749979}}, "df": 1}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}}, "df": 8, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 18}}}, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 9, "s": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 27}, "d": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 2.449489742783178}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2.23606797749979}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 11}, "r": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 2}}, "a": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.base.get_dataset": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2.449489742783178}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1.4142135623730951}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 2.449489742783178}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}}, "df": 15}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 5}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "f": {"docs": {"sslearn.datasets.read_keel": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.utils": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "t": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 2}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 29, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.7320508075688772}}, "df": 11}}, "w": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1.4142135623730951}}, "df": 30}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 30}}}}, "n": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 2.23606797749979}, "sslearn.wrapper.SelfTraining": {"tf": 2.449489742783178}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 4}, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 3}}}, "o": {"docs": {"sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.7320508075688772}}, "df": 4, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.restricted": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 24}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 1, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 26, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.restricted.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 3}}, "s": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}, "s": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 2.23606797749979}}, "df": 1}, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}}, "df": 1}}}}, "x": {"2": {"docs": {"sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}}, "df": 4}, "docs": {"sslearn": {"tf": 2.6457513110645907}, "sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.base.get_dataset": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1.4142135623730951}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.fit": {"tf": 1.4142135623730951}}, "df": 45, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1, "g": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"sslearn": {"tf": 2.23606797749979}, "sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1.4142135623730951}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2.23606797749979}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1.4142135623730951}}, "df": 39, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}, "n": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "k": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}}, "df": 4, "s": {"docs": {"sslearn.base.FakedProbaClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.7320508075688772}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}}, "df": 43}, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 27}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}}, "df": 8}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1.7320508075688772}}, "df": 24, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 24}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 36}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}}, "df": 1, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {"sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.restricted.conflict_rate": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.utils.safe_division": {"tf": 1.4142135623730951}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}, "t": {"docs": {"sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {"sslearn.wrapper": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.datasets": {"tf": 1.4142135623730951}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 5}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.subview": {"tf": 1.4142135623730951}}, "df": 2}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 3}}}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.restricted.conflict_rate": {"tf": 2}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 8}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "m": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.wrapper": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}}, "df": 13, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 12}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 10}}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {"sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1.4142135623730951}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 7}, "a": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.save_keel": {"tf": 1.4142135623730951}}, "df": 1}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "z": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}}, "df": 1}}}}}, "\u00ed": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "z": {"docs": {"sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}}, "df": 1}}}, "v": {"1": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 2}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 27}}}, "a": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}}, "df": 3}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.get_dataset": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1.7320508075688772}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}}, "df": 7, "s": {"docs": {"sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}}, "df": 14}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 24}, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.model_selection": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 2}}, "df": 1}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"sslearn.subview": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.__init__": {"tf": 2}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}}, "df": 6}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 2}}}, "z": {"docs": {"sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}, "g": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "o": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1.7320508075688772}}, "df": 3}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 2}, "o": {"docs": {}, "df": 0, "u": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 4}}}}, "h": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 4}, "c": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 24}}}}, "w": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "w": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 24}}}}}}}, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "w": {"docs": {"sslearn.datasets.read_keel": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1}}, "df": 24}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.restricted.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 7}}, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}}, "df": 6}, "d": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 2}}, "n": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}}, "df": 1}, "w": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}, "a": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 3}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}}, "df": 1}}, "i": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "k": {"docs": {"sslearn.model_selection": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2.23606797749979}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 4, "e": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.utils.calculate_prior_probability": {"tf": 1}}, "df": 1, "s": {"docs": {"sslearn.base.FakedProbaClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_partial_fit_request": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.set_score_request": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.WiWTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_predict_proba_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_fit_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.set_score_request": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.set_score_request": {"tf": 1.4142135623730951}}, "df": 24}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 11}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.datasets": {"tf": 2}, "sslearn.datasets.read_keel": {"tf": 1.4142135623730951}, "sslearn.datasets.save_keel": {"tf": 1}}, "df": 3}, "p": {"docs": {"sslearn.restricted": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.WiWTriTraining": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 11}}, "d": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.WiWTriTraining.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "q": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();